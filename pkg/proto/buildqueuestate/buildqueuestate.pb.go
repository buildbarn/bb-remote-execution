// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.23.1
// source: pkg/proto/buildqueuestate/buildqueuestate.proto

package buildqueuestate

import (
	context "context"
	v2 "github.com/bazelbuild/remote-apis/build/bazel/remote/execution/v2"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListInvocationChildrenRequest_Filter int32

const (
	ListInvocationChildrenRequest_ALL    ListInvocationChildrenRequest_Filter = 0
	ListInvocationChildrenRequest_ACTIVE ListInvocationChildrenRequest_Filter = 1
	ListInvocationChildrenRequest_QUEUED ListInvocationChildrenRequest_Filter = 2
)

// Enum value maps for ListInvocationChildrenRequest_Filter.
var (
	ListInvocationChildrenRequest_Filter_name = map[int32]string{
		0: "ALL",
		1: "ACTIVE",
		2: "QUEUED",
	}
	ListInvocationChildrenRequest_Filter_value = map[string]int32{
		"ALL":    0,
		"ACTIVE": 1,
		"QUEUED": 2,
	}
)

func (x ListInvocationChildrenRequest_Filter) Enum() *ListInvocationChildrenRequest_Filter {
	p := new(ListInvocationChildrenRequest_Filter)
	*p = x
	return p
}

func (x ListInvocationChildrenRequest_Filter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListInvocationChildrenRequest_Filter) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_enumTypes[0].Descriptor()
}

func (ListInvocationChildrenRequest_Filter) Type() protoreflect.EnumType {
	return &file_pkg_proto_buildqueuestate_buildqueuestate_proto_enumTypes[0]
}

func (x ListInvocationChildrenRequest_Filter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListInvocationChildrenRequest_Filter.Descriptor instead.
func (ListInvocationChildrenRequest_Filter) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{17, 0}
}

type PaginationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartIndex   uint32 `protobuf:"varint,1,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	TotalEntries uint32 `protobuf:"varint,2,opt,name=total_entries,json=totalEntries,proto3" json:"total_entries,omitempty"`
}

func (x *PaginationInfo) Reset() {
	*x = PaginationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationInfo) ProtoMessage() {}

func (x *PaginationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationInfo.ProtoReflect.Descriptor instead.
func (*PaginationInfo) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationInfo) GetStartIndex() uint32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *PaginationInfo) GetTotalEntries() uint32 {
	if x != nil {
		return x.TotalEntries
	}
	return 0
}

type PlatformQueueName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceNamePrefix string       `protobuf:"bytes,1,opt,name=instance_name_prefix,json=instanceNamePrefix,proto3" json:"instance_name_prefix,omitempty"`
	Platform           *v2.Platform `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *PlatformQueueName) Reset() {
	*x = PlatformQueueName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformQueueName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformQueueName) ProtoMessage() {}

func (x *PlatformQueueName) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformQueueName.ProtoReflect.Descriptor instead.
func (*PlatformQueueName) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{1}
}

func (x *PlatformQueueName) GetInstanceNamePrefix() string {
	if x != nil {
		return x.InstanceNamePrefix
	}
	return ""
}

func (x *PlatformQueueName) GetPlatform() *v2.Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

type SizeClassQueueName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformQueueName *PlatformQueueName `protobuf:"bytes,1,opt,name=platform_queue_name,json=platformQueueName,proto3" json:"platform_queue_name,omitempty"`
	SizeClass         uint32             `protobuf:"varint,2,opt,name=size_class,json=sizeClass,proto3" json:"size_class,omitempty"`
}

func (x *SizeClassQueueName) Reset() {
	*x = SizeClassQueueName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SizeClassQueueName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SizeClassQueueName) ProtoMessage() {}

func (x *SizeClassQueueName) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SizeClassQueueName.ProtoReflect.Descriptor instead.
func (*SizeClassQueueName) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{2}
}

func (x *SizeClassQueueName) GetPlatformQueueName() *PlatformQueueName {
	if x != nil {
		return x.PlatformQueueName
	}
	return nil
}

func (x *SizeClassQueueName) GetSizeClass() uint32 {
	if x != nil {
		return x.SizeClass
	}
	return 0
}

type InvocationName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeClassQueueName *SizeClassQueueName `protobuf:"bytes,1,opt,name=size_class_queue_name,json=sizeClassQueueName,proto3" json:"size_class_queue_name,omitempty"`
	Ids                []*anypb.Any        `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *InvocationName) Reset() {
	*x = InvocationName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvocationName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvocationName) ProtoMessage() {}

func (x *InvocationName) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvocationName.ProtoReflect.Descriptor instead.
func (*InvocationName) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{3}
}

func (x *InvocationName) GetSizeClassQueueName() *SizeClassQueueName {
	if x != nil {
		return x.SizeClassQueueName
	}
	return nil
}

func (x *InvocationName) GetIds() []*anypb.Any {
	if x != nil {
		return x.Ids
	}
	return nil
}

type OperationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InvocationName   *InvocationName        `protobuf:"bytes,2,opt,name=invocation_name,json=invocationName,proto3" json:"invocation_name,omitempty"`
	ExpectedDuration *durationpb.Duration   `protobuf:"bytes,14,opt,name=expected_duration,json=expectedDuration,proto3" json:"expected_duration,omitempty"`
	QueuedTimestamp  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=queued_timestamp,json=queuedTimestamp,proto3" json:"queued_timestamp,omitempty"`
	ActionDigest     *v2.Digest             `protobuf:"bytes,5,opt,name=action_digest,json=actionDigest,proto3" json:"action_digest,omitempty"`
	Timeout          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Types that are assignable to Stage:
	//
	//	*OperationState_Queued
	//	*OperationState_Executing
	//	*OperationState_Completed
	Stage              isOperationState_Stage  `protobuf_oneof:"stage"`
	TargetId           string                  `protobuf:"bytes,11,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Priority           int32                   `protobuf:"varint,12,opt,name=priority,proto3" json:"priority,omitempty"`
	InstanceNameSuffix string                  `protobuf:"bytes,13,opt,name=instance_name_suffix,json=instanceNameSuffix,proto3" json:"instance_name_suffix,omitempty"`
	DigestFunction     v2.DigestFunction_Value `protobuf:"varint,15,opt,name=digest_function,json=digestFunction,proto3,enum=build.bazel.remote.execution.v2.DigestFunction_Value" json:"digest_function,omitempty"`
}

func (x *OperationState) Reset() {
	*x = OperationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationState) ProtoMessage() {}

func (x *OperationState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationState.ProtoReflect.Descriptor instead.
func (*OperationState) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{4}
}

func (x *OperationState) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OperationState) GetInvocationName() *InvocationName {
	if x != nil {
		return x.InvocationName
	}
	return nil
}

func (x *OperationState) GetExpectedDuration() *durationpb.Duration {
	if x != nil {
		return x.ExpectedDuration
	}
	return nil
}

func (x *OperationState) GetQueuedTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.QueuedTimestamp
	}
	return nil
}

func (x *OperationState) GetActionDigest() *v2.Digest {
	if x != nil {
		return x.ActionDigest
	}
	return nil
}

func (x *OperationState) GetTimeout() *timestamppb.Timestamp {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (m *OperationState) GetStage() isOperationState_Stage {
	if m != nil {
		return m.Stage
	}
	return nil
}

func (x *OperationState) GetQueued() *emptypb.Empty {
	if x, ok := x.GetStage().(*OperationState_Queued); ok {
		return x.Queued
	}
	return nil
}

func (x *OperationState) GetExecuting() *emptypb.Empty {
	if x, ok := x.GetStage().(*OperationState_Executing); ok {
		return x.Executing
	}
	return nil
}

func (x *OperationState) GetCompleted() *v2.ExecuteResponse {
	if x, ok := x.GetStage().(*OperationState_Completed); ok {
		return x.Completed
	}
	return nil
}

func (x *OperationState) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *OperationState) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *OperationState) GetInstanceNameSuffix() string {
	if x != nil {
		return x.InstanceNameSuffix
	}
	return ""
}

func (x *OperationState) GetDigestFunction() v2.DigestFunction_Value {
	if x != nil {
		return x.DigestFunction
	}
	return v2.DigestFunction_Value(0)
}

type isOperationState_Stage interface {
	isOperationState_Stage()
}

type OperationState_Queued struct {
	Queued *emptypb.Empty `protobuf:"bytes,8,opt,name=queued,proto3,oneof"`
}

type OperationState_Executing struct {
	Executing *emptypb.Empty `protobuf:"bytes,9,opt,name=executing,proto3,oneof"`
}

type OperationState_Completed struct {
	Completed *v2.ExecuteResponse `protobuf:"bytes,10,opt,name=completed,proto3,oneof"`
}

func (*OperationState_Queued) isOperationState_Stage() {}

func (*OperationState_Executing) isOperationState_Stage() {}

func (*OperationState_Completed) isOperationState_Stage() {}

type SizeClassQueueState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeClass      uint32                 `protobuf:"varint,1,opt,name=size_class,json=sizeClass,proto3" json:"size_class,omitempty"`
	Timeout        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	WorkersCount   uint32                 `protobuf:"varint,5,opt,name=workers_count,json=workersCount,proto3" json:"workers_count,omitempty"`
	DrainsCount    uint32                 `protobuf:"varint,7,opt,name=drains_count,json=drainsCount,proto3" json:"drains_count,omitempty"`
	RootInvocation *InvocationState       `protobuf:"bytes,9,opt,name=root_invocation,json=rootInvocation,proto3" json:"root_invocation,omitempty"`
}

func (x *SizeClassQueueState) Reset() {
	*x = SizeClassQueueState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SizeClassQueueState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SizeClassQueueState) ProtoMessage() {}

func (x *SizeClassQueueState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SizeClassQueueState.ProtoReflect.Descriptor instead.
func (*SizeClassQueueState) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{5}
}

func (x *SizeClassQueueState) GetSizeClass() uint32 {
	if x != nil {
		return x.SizeClass
	}
	return 0
}

func (x *SizeClassQueueState) GetTimeout() *timestamppb.Timestamp {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *SizeClassQueueState) GetWorkersCount() uint32 {
	if x != nil {
		return x.WorkersCount
	}
	return 0
}

func (x *SizeClassQueueState) GetDrainsCount() uint32 {
	if x != nil {
		return x.DrainsCount
	}
	return 0
}

func (x *SizeClassQueueState) GetRootInvocation() *InvocationState {
	if x != nil {
		return x.RootInvocation
	}
	return nil
}

type PlatformQueueState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            *PlatformQueueName     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SizeClassQueues []*SizeClassQueueState `protobuf:"bytes,2,rep,name=size_class_queues,json=sizeClassQueues,proto3" json:"size_class_queues,omitempty"`
}

func (x *PlatformQueueState) Reset() {
	*x = PlatformQueueState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformQueueState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformQueueState) ProtoMessage() {}

func (x *PlatformQueueState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformQueueState.ProtoReflect.Descriptor instead.
func (*PlatformQueueState) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{6}
}

func (x *PlatformQueueState) GetName() *PlatformQueueName {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *PlatformQueueState) GetSizeClassQueues() []*SizeClassQueueState {
	if x != nil {
		return x.SizeClassQueues
	}
	return nil
}

type InvocationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueuedOperationsCount         uint32 `protobuf:"varint,2,opt,name=queued_operations_count,json=queuedOperationsCount,proto3" json:"queued_operations_count,omitempty"`
	ExecutingWorkersCount         uint32 `protobuf:"varint,4,opt,name=executing_workers_count,json=executingWorkersCount,proto3" json:"executing_workers_count,omitempty"`
	IdleWorkersCount              uint32 `protobuf:"varint,5,opt,name=idle_workers_count,json=idleWorkersCount,proto3" json:"idle_workers_count,omitempty"`
	IdleSynchronizingWorkersCount uint32 `protobuf:"varint,6,opt,name=idle_synchronizing_workers_count,json=idleSynchronizingWorkersCount,proto3" json:"idle_synchronizing_workers_count,omitempty"`
	ChildrenCount                 uint32 `protobuf:"varint,7,opt,name=children_count,json=childrenCount,proto3" json:"children_count,omitempty"`
	ActiveChildrenCount           uint32 `protobuf:"varint,8,opt,name=active_children_count,json=activeChildrenCount,proto3" json:"active_children_count,omitempty"`
	QueuedChildrenCount           uint32 `protobuf:"varint,9,opt,name=queued_children_count,json=queuedChildrenCount,proto3" json:"queued_children_count,omitempty"`
}

func (x *InvocationState) Reset() {
	*x = InvocationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvocationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvocationState) ProtoMessage() {}

func (x *InvocationState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvocationState.ProtoReflect.Descriptor instead.
func (*InvocationState) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{7}
}

func (x *InvocationState) GetQueuedOperationsCount() uint32 {
	if x != nil {
		return x.QueuedOperationsCount
	}
	return 0
}

func (x *InvocationState) GetExecutingWorkersCount() uint32 {
	if x != nil {
		return x.ExecutingWorkersCount
	}
	return 0
}

func (x *InvocationState) GetIdleWorkersCount() uint32 {
	if x != nil {
		return x.IdleWorkersCount
	}
	return 0
}

func (x *InvocationState) GetIdleSynchronizingWorkersCount() uint32 {
	if x != nil {
		return x.IdleSynchronizingWorkersCount
	}
	return 0
}

func (x *InvocationState) GetChildrenCount() uint32 {
	if x != nil {
		return x.ChildrenCount
	}
	return 0
}

func (x *InvocationState) GetActiveChildrenCount() uint32 {
	if x != nil {
		return x.ActiveChildrenCount
	}
	return 0
}

func (x *InvocationState) GetQueuedChildrenCount() uint32 {
	if x != nil {
		return x.QueuedChildrenCount
	}
	return 0
}

type InvocationChildState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *anypb.Any       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State *InvocationState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *InvocationChildState) Reset() {
	*x = InvocationChildState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvocationChildState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvocationChildState) ProtoMessage() {}

func (x *InvocationChildState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvocationChildState.ProtoReflect.Descriptor instead.
func (*InvocationChildState) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{8}
}

func (x *InvocationChildState) GetId() *anypb.Any {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *InvocationChildState) GetState() *InvocationState {
	if x != nil {
		return x.State
	}
	return nil
}

type WorkerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               map[string]string      `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timeout          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	CurrentOperation *OperationState        `protobuf:"bytes,3,opt,name=current_operation,json=currentOperation,proto3" json:"current_operation,omitempty"`
	Drained          bool                   `protobuf:"varint,4,opt,name=drained,proto3" json:"drained,omitempty"`
}

func (x *WorkerState) Reset() {
	*x = WorkerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerState) ProtoMessage() {}

func (x *WorkerState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerState.ProtoReflect.Descriptor instead.
func (*WorkerState) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{9}
}

func (x *WorkerState) GetId() map[string]string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *WorkerState) GetTimeout() *timestamppb.Timestamp {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *WorkerState) GetCurrentOperation() *OperationState {
	if x != nil {
		return x.CurrentOperation
	}
	return nil
}

func (x *WorkerState) GetDrained() bool {
	if x != nil {
		return x.Drained
	}
	return false
}

type DrainState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerIdPattern  map[string]string      `protobuf:"bytes,1,rep,name=worker_id_pattern,json=workerIdPattern,proto3" json:"worker_id_pattern,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatedTimestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
}

func (x *DrainState) Reset() {
	*x = DrainState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrainState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainState) ProtoMessage() {}

func (x *DrainState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrainState.ProtoReflect.Descriptor instead.
func (*DrainState) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{10}
}

func (x *DrainState) GetWorkerIdPattern() map[string]string {
	if x != nil {
		return x.WorkerIdPattern
	}
	return nil
}

func (x *DrainState) GetCreatedTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTimestamp
	}
	return nil
}

type GetOperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationName string `protobuf:"bytes,1,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`
}

func (x *GetOperationRequest) Reset() {
	*x = GetOperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationRequest) ProtoMessage() {}

func (x *GetOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationRequest.ProtoReflect.Descriptor instead.
func (*GetOperationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{11}
}

func (x *GetOperationRequest) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

type GetOperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation *OperationState `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *GetOperationResponse) Reset() {
	*x = GetOperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationResponse) ProtoMessage() {}

func (x *GetOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationResponse.ProtoReflect.Descriptor instead.
func (*GetOperationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{12}
}

func (x *GetOperationResponse) GetOperation() *OperationState {
	if x != nil {
		return x.Operation
	}
	return nil
}

type ListOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize           uint32                            `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	StartAfter         *ListOperationsRequest_StartAfter `protobuf:"bytes,2,opt,name=start_after,json=startAfter,proto3" json:"start_after,omitempty"`
	FilterInvocationId *anypb.Any                        `protobuf:"bytes,3,opt,name=filter_invocation_id,json=filterInvocationId,proto3" json:"filter_invocation_id,omitempty"`
	FilterStage        v2.ExecutionStage_Value           `protobuf:"varint,4,opt,name=filter_stage,json=filterStage,proto3,enum=build.bazel.remote.execution.v2.ExecutionStage_Value" json:"filter_stage,omitempty"`
}

func (x *ListOperationsRequest) Reset() {
	*x = ListOperationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperationsRequest) ProtoMessage() {}

func (x *ListOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListOperationsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{13}
}

func (x *ListOperationsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListOperationsRequest) GetStartAfter() *ListOperationsRequest_StartAfter {
	if x != nil {
		return x.StartAfter
	}
	return nil
}

func (x *ListOperationsRequest) GetFilterInvocationId() *anypb.Any {
	if x != nil {
		return x.FilterInvocationId
	}
	return nil
}

func (x *ListOperationsRequest) GetFilterStage() v2.ExecutionStage_Value {
	if x != nil {
		return x.FilterStage
	}
	return v2.ExecutionStage_Value(0)
}

type ListOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operations     []*OperationState `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	PaginationInfo *PaginationInfo   `protobuf:"bytes,2,opt,name=pagination_info,json=paginationInfo,proto3" json:"pagination_info,omitempty"`
}

func (x *ListOperationsResponse) Reset() {
	*x = ListOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperationsResponse) ProtoMessage() {}

func (x *ListOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListOperationsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{14}
}

func (x *ListOperationsResponse) GetOperations() []*OperationState {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ListOperationsResponse) GetPaginationInfo() *PaginationInfo {
	if x != nil {
		return x.PaginationInfo
	}
	return nil
}

type KillOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *KillOperationsRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Status *status.Status                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *KillOperationsRequest) Reset() {
	*x = KillOperationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillOperationsRequest) ProtoMessage() {}

func (x *KillOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillOperationsRequest.ProtoReflect.Descriptor instead.
func (*KillOperationsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{15}
}

func (x *KillOperationsRequest) GetFilter() *KillOperationsRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *KillOperationsRequest) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type ListPlatformQueuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformQueues []*PlatformQueueState `protobuf:"bytes,1,rep,name=platform_queues,json=platformQueues,proto3" json:"platform_queues,omitempty"`
}

func (x *ListPlatformQueuesResponse) Reset() {
	*x = ListPlatformQueuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformQueuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformQueuesResponse) ProtoMessage() {}

func (x *ListPlatformQueuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformQueuesResponse.ProtoReflect.Descriptor instead.
func (*ListPlatformQueuesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{16}
}

func (x *ListPlatformQueuesResponse) GetPlatformQueues() []*PlatformQueueState {
	if x != nil {
		return x.PlatformQueues
	}
	return nil
}

type ListInvocationChildrenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvocationName *InvocationName                      `protobuf:"bytes,1,opt,name=invocation_name,json=invocationName,proto3" json:"invocation_name,omitempty"`
	Filter         ListInvocationChildrenRequest_Filter `protobuf:"varint,2,opt,name=filter,proto3,enum=buildbarn.buildqueuestate.ListInvocationChildrenRequest_Filter" json:"filter,omitempty"`
}

func (x *ListInvocationChildrenRequest) Reset() {
	*x = ListInvocationChildrenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInvocationChildrenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInvocationChildrenRequest) ProtoMessage() {}

func (x *ListInvocationChildrenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInvocationChildrenRequest.ProtoReflect.Descriptor instead.
func (*ListInvocationChildrenRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{17}
}

func (x *ListInvocationChildrenRequest) GetInvocationName() *InvocationName {
	if x != nil {
		return x.InvocationName
	}
	return nil
}

func (x *ListInvocationChildrenRequest) GetFilter() ListInvocationChildrenRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return ListInvocationChildrenRequest_ALL
}

type ListInvocationChildrenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*InvocationChildState `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *ListInvocationChildrenResponse) Reset() {
	*x = ListInvocationChildrenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInvocationChildrenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInvocationChildrenResponse) ProtoMessage() {}

func (x *ListInvocationChildrenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInvocationChildrenResponse.ProtoReflect.Descriptor instead.
func (*ListInvocationChildrenResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{18}
}

func (x *ListInvocationChildrenResponse) GetChildren() []*InvocationChildState {
	if x != nil {
		return x.Children
	}
	return nil
}

type ListQueuedOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvocationName *InvocationName                         `protobuf:"bytes,1,opt,name=invocation_name,json=invocationName,proto3" json:"invocation_name,omitempty"`
	PageSize       uint32                                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	StartAfter     *ListQueuedOperationsRequest_StartAfter `protobuf:"bytes,4,opt,name=start_after,json=startAfter,proto3" json:"start_after,omitempty"`
}

func (x *ListQueuedOperationsRequest) Reset() {
	*x = ListQueuedOperationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQueuedOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuedOperationsRequest) ProtoMessage() {}

func (x *ListQueuedOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuedOperationsRequest.ProtoReflect.Descriptor instead.
func (*ListQueuedOperationsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{19}
}

func (x *ListQueuedOperationsRequest) GetInvocationName() *InvocationName {
	if x != nil {
		return x.InvocationName
	}
	return nil
}

func (x *ListQueuedOperationsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListQueuedOperationsRequest) GetStartAfter() *ListQueuedOperationsRequest_StartAfter {
	if x != nil {
		return x.StartAfter
	}
	return nil
}

type ListQueuedOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueuedOperations []*OperationState `protobuf:"bytes,1,rep,name=queued_operations,json=queuedOperations,proto3" json:"queued_operations,omitempty"`
	PaginationInfo   *PaginationInfo   `protobuf:"bytes,2,opt,name=pagination_info,json=paginationInfo,proto3" json:"pagination_info,omitempty"`
}

func (x *ListQueuedOperationsResponse) Reset() {
	*x = ListQueuedOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQueuedOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuedOperationsResponse) ProtoMessage() {}

func (x *ListQueuedOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuedOperationsResponse.ProtoReflect.Descriptor instead.
func (*ListQueuedOperationsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{20}
}

func (x *ListQueuedOperationsResponse) GetQueuedOperations() []*OperationState {
	if x != nil {
		return x.QueuedOperations
	}
	return nil
}

func (x *ListQueuedOperationsResponse) GetPaginationInfo() *PaginationInfo {
	if x != nil {
		return x.PaginationInfo
	}
	return nil
}

type ListWorkersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter     *ListWorkersRequest_Filter     `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	PageSize   uint32                         `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	StartAfter *ListWorkersRequest_StartAfter `protobuf:"bytes,4,opt,name=start_after,json=startAfter,proto3" json:"start_after,omitempty"`
}

func (x *ListWorkersRequest) Reset() {
	*x = ListWorkersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkersRequest) ProtoMessage() {}

func (x *ListWorkersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkersRequest.ProtoReflect.Descriptor instead.
func (*ListWorkersRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{21}
}

func (x *ListWorkersRequest) GetFilter() *ListWorkersRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListWorkersRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWorkersRequest) GetStartAfter() *ListWorkersRequest_StartAfter {
	if x != nil {
		return x.StartAfter
	}
	return nil
}

type ListWorkersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workers        []*WorkerState  `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty"`
	PaginationInfo *PaginationInfo `protobuf:"bytes,2,opt,name=pagination_info,json=paginationInfo,proto3" json:"pagination_info,omitempty"`
}

func (x *ListWorkersResponse) Reset() {
	*x = ListWorkersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkersResponse) ProtoMessage() {}

func (x *ListWorkersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkersResponse.ProtoReflect.Descriptor instead.
func (*ListWorkersResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{22}
}

func (x *ListWorkersResponse) GetWorkers() []*WorkerState {
	if x != nil {
		return x.Workers
	}
	return nil
}

func (x *ListWorkersResponse) GetPaginationInfo() *PaginationInfo {
	if x != nil {
		return x.PaginationInfo
	}
	return nil
}

type TerminateWorkersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerIdPattern map[string]string `protobuf:"bytes,1,rep,name=worker_id_pattern,json=workerIdPattern,proto3" json:"worker_id_pattern,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TerminateWorkersRequest) Reset() {
	*x = TerminateWorkersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateWorkersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateWorkersRequest) ProtoMessage() {}

func (x *TerminateWorkersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateWorkersRequest.ProtoReflect.Descriptor instead.
func (*TerminateWorkersRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{23}
}

func (x *TerminateWorkersRequest) GetWorkerIdPattern() map[string]string {
	if x != nil {
		return x.WorkerIdPattern
	}
	return nil
}

type ListDrainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeClassQueueName *SizeClassQueueName `protobuf:"bytes,1,opt,name=size_class_queue_name,json=sizeClassQueueName,proto3" json:"size_class_queue_name,omitempty"`
}

func (x *ListDrainsRequest) Reset() {
	*x = ListDrainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDrainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDrainsRequest) ProtoMessage() {}

func (x *ListDrainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDrainsRequest.ProtoReflect.Descriptor instead.
func (*ListDrainsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{24}
}

func (x *ListDrainsRequest) GetSizeClassQueueName() *SizeClassQueueName {
	if x != nil {
		return x.SizeClassQueueName
	}
	return nil
}

type ListDrainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drains []*DrainState `protobuf:"bytes,1,rep,name=drains,proto3" json:"drains,omitempty"`
}

func (x *ListDrainsResponse) Reset() {
	*x = ListDrainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDrainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDrainsResponse) ProtoMessage() {}

func (x *ListDrainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDrainsResponse.ProtoReflect.Descriptor instead.
func (*ListDrainsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{25}
}

func (x *ListDrainsResponse) GetDrains() []*DrainState {
	if x != nil {
		return x.Drains
	}
	return nil
}

type AddOrRemoveDrainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeClassQueueName *SizeClassQueueName `protobuf:"bytes,1,opt,name=size_class_queue_name,json=sizeClassQueueName,proto3" json:"size_class_queue_name,omitempty"`
	WorkerIdPattern    map[string]string   `protobuf:"bytes,2,rep,name=worker_id_pattern,json=workerIdPattern,proto3" json:"worker_id_pattern,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddOrRemoveDrainRequest) Reset() {
	*x = AddOrRemoveDrainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrRemoveDrainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrRemoveDrainRequest) ProtoMessage() {}

func (x *AddOrRemoveDrainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrRemoveDrainRequest.ProtoReflect.Descriptor instead.
func (*AddOrRemoveDrainRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{26}
}

func (x *AddOrRemoveDrainRequest) GetSizeClassQueueName() *SizeClassQueueName {
	if x != nil {
		return x.SizeClassQueueName
	}
	return nil
}

func (x *AddOrRemoveDrainRequest) GetWorkerIdPattern() map[string]string {
	if x != nil {
		return x.WorkerIdPattern
	}
	return nil
}

type BackgroundLearning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BackgroundLearning) Reset() {
	*x = BackgroundLearning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackgroundLearning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundLearning) ProtoMessage() {}

func (x *BackgroundLearning) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundLearning.ProtoReflect.Descriptor instead.
func (*BackgroundLearning) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{27}
}

type ListOperationsRequest_StartAfter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationName string `protobuf:"bytes,1,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`
}

func (x *ListOperationsRequest_StartAfter) Reset() {
	*x = ListOperationsRequest_StartAfter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOperationsRequest_StartAfter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperationsRequest_StartAfter) ProtoMessage() {}

func (x *ListOperationsRequest_StartAfter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperationsRequest_StartAfter.ProtoReflect.Descriptor instead.
func (*ListOperationsRequest_StartAfter) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ListOperationsRequest_StartAfter) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

type KillOperationsRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*KillOperationsRequest_Filter_OperationName
	//	*KillOperationsRequest_Filter_SizeClassQueueWithoutWorkers
	Type isKillOperationsRequest_Filter_Type `protobuf_oneof:"type"`
}

func (x *KillOperationsRequest_Filter) Reset() {
	*x = KillOperationsRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillOperationsRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillOperationsRequest_Filter) ProtoMessage() {}

func (x *KillOperationsRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillOperationsRequest_Filter.ProtoReflect.Descriptor instead.
func (*KillOperationsRequest_Filter) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{15, 0}
}

func (m *KillOperationsRequest_Filter) GetType() isKillOperationsRequest_Filter_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *KillOperationsRequest_Filter) GetOperationName() string {
	if x, ok := x.GetType().(*KillOperationsRequest_Filter_OperationName); ok {
		return x.OperationName
	}
	return ""
}

func (x *KillOperationsRequest_Filter) GetSizeClassQueueWithoutWorkers() *SizeClassQueueName {
	if x, ok := x.GetType().(*KillOperationsRequest_Filter_SizeClassQueueWithoutWorkers); ok {
		return x.SizeClassQueueWithoutWorkers
	}
	return nil
}

type isKillOperationsRequest_Filter_Type interface {
	isKillOperationsRequest_Filter_Type()
}

type KillOperationsRequest_Filter_OperationName struct {
	OperationName string `protobuf:"bytes,1,opt,name=operation_name,json=operationName,proto3,oneof"`
}

type KillOperationsRequest_Filter_SizeClassQueueWithoutWorkers struct {
	SizeClassQueueWithoutWorkers *SizeClassQueueName `protobuf:"bytes,2,opt,name=size_class_queue_without_workers,json=sizeClassQueueWithoutWorkers,proto3,oneof"`
}

func (*KillOperationsRequest_Filter_OperationName) isKillOperationsRequest_Filter_Type() {}

func (*KillOperationsRequest_Filter_SizeClassQueueWithoutWorkers) isKillOperationsRequest_Filter_Type() {
}

type ListQueuedOperationsRequest_StartAfter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Priority         int32                  `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	ExpectedDuration *durationpb.Duration   `protobuf:"bytes,3,opt,name=expected_duration,json=expectedDuration,proto3" json:"expected_duration,omitempty"`
	QueuedTimestamp  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=queued_timestamp,json=queuedTimestamp,proto3" json:"queued_timestamp,omitempty"`
}

func (x *ListQueuedOperationsRequest_StartAfter) Reset() {
	*x = ListQueuedOperationsRequest_StartAfter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQueuedOperationsRequest_StartAfter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuedOperationsRequest_StartAfter) ProtoMessage() {}

func (x *ListQueuedOperationsRequest_StartAfter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuedOperationsRequest_StartAfter.ProtoReflect.Descriptor instead.
func (*ListQueuedOperationsRequest_StartAfter) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{19, 0}
}

func (x *ListQueuedOperationsRequest_StartAfter) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ListQueuedOperationsRequest_StartAfter) GetExpectedDuration() *durationpb.Duration {
	if x != nil {
		return x.ExpectedDuration
	}
	return nil
}

func (x *ListQueuedOperationsRequest_StartAfter) GetQueuedTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.QueuedTimestamp
	}
	return nil
}

type ListWorkersRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*ListWorkersRequest_Filter_All
	//	*ListWorkersRequest_Filter_Executing
	//	*ListWorkersRequest_Filter_IdleSynchronizing
	Type isListWorkersRequest_Filter_Type `protobuf_oneof:"type"`
}

func (x *ListWorkersRequest_Filter) Reset() {
	*x = ListWorkersRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkersRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkersRequest_Filter) ProtoMessage() {}

func (x *ListWorkersRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkersRequest_Filter.ProtoReflect.Descriptor instead.
func (*ListWorkersRequest_Filter) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{21, 0}
}

func (m *ListWorkersRequest_Filter) GetType() isListWorkersRequest_Filter_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *ListWorkersRequest_Filter) GetAll() *SizeClassQueueName {
	if x, ok := x.GetType().(*ListWorkersRequest_Filter_All); ok {
		return x.All
	}
	return nil
}

func (x *ListWorkersRequest_Filter) GetExecuting() *InvocationName {
	if x, ok := x.GetType().(*ListWorkersRequest_Filter_Executing); ok {
		return x.Executing
	}
	return nil
}

func (x *ListWorkersRequest_Filter) GetIdleSynchronizing() *InvocationName {
	if x, ok := x.GetType().(*ListWorkersRequest_Filter_IdleSynchronizing); ok {
		return x.IdleSynchronizing
	}
	return nil
}

type isListWorkersRequest_Filter_Type interface {
	isListWorkersRequest_Filter_Type()
}

type ListWorkersRequest_Filter_All struct {
	All *SizeClassQueueName `protobuf:"bytes,1,opt,name=all,proto3,oneof"`
}

type ListWorkersRequest_Filter_Executing struct {
	Executing *InvocationName `protobuf:"bytes,2,opt,name=executing,proto3,oneof"`
}

type ListWorkersRequest_Filter_IdleSynchronizing struct {
	IdleSynchronizing *InvocationName `protobuf:"bytes,3,opt,name=idle_synchronizing,json=idleSynchronizing,proto3,oneof"`
}

func (*ListWorkersRequest_Filter_All) isListWorkersRequest_Filter_Type() {}

func (*ListWorkersRequest_Filter_Executing) isListWorkersRequest_Filter_Type() {}

func (*ListWorkersRequest_Filter_IdleSynchronizing) isListWorkersRequest_Filter_Type() {}

type ListWorkersRequest_StartAfter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerId map[string]string `protobuf:"bytes,1,rep,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListWorkersRequest_StartAfter) Reset() {
	*x = ListWorkersRequest_StartAfter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkersRequest_StartAfter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkersRequest_StartAfter) ProtoMessage() {}

func (x *ListWorkersRequest_StartAfter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkersRequest_StartAfter.ProtoReflect.Descriptor instead.
func (*ListWorkersRequest_StartAfter) Descriptor() ([]byte, []int) {
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP(), []int{21, 1}
}

func (x *ListWorkersRequest_StartAfter) GetWorkerId() map[string]string {
	if x != nil {
		return x.WorkerId
	}
	return nil
}

var File_pkg_proto_buildqueuestate_buildqueuestate_proto protoreflect.FileDescriptor

var file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x19, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x36, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x2f, 0x62, 0x61, 0x7a, 0x65, 0x6c, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x8c,
	0x01, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x45, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x2e, 0x62, 0x61, 0x7a, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x91, 0x01,
	0x0a, 0x12, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x11, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x22, 0x9a, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x53, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x12, 0x73, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xa7,
	0x06, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x10, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x45, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x4c, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x61, 0x7a, 0x65, 0x6c, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x06,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x12, 0x36,
	0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x50, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x2e, 0x62, 0x61, 0x7a, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x75, 0x66,
	0x66, 0x69, 0x78, 0x12, 0x5e, 0x0a, 0x0f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x61, 0x7a, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0e, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x4a, 0x04, 0x08, 0x03,
	0x10, 0x04, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x22, 0x9f, 0x02, 0x0a, 0x13, 0x53, 0x69, 0x7a,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x34, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x72,
	0x61, 0x69, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x53, 0x0a,
	0x0f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61,
	0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0e, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04,
	0x08, 0x06, 0x10, 0x07, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x22, 0xb2, 0x01, 0x0a, 0x12, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x40, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f,
	0x73, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x22,
	0x93, 0x03, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x69, 0x64, 0x6c, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x47, 0x0a, 0x20, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72,
	0x6f, 0x6e, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1d, 0x69, 0x64, 0x6c,
	0x65, 0x53, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x13, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x5f,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a,
	0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x7e, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x49,
	0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xac, 0x02, 0x0a, 0x0b, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x56, 0x0a, 0x11, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61,
	0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x1a, 0x35, 0x0a,
	0x07, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x81, 0x02, 0x0a, 0x0a, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x50, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x49, 0x64, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x47, 0x0a, 0x11, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x1a, 0x42, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe9, 0x02, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x5c,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x14,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x12, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x62, 0x61, 0x7a, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x1a, 0x33,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x0f, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc9, 0x02,
	0x0a, 0x15, 0x4b, 0x69, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62,
	0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x1a, 0xb2, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x27, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x77, 0x0a, 0x20, 0x73, 0x69, 0x7a, 0x65,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x77, 0x69, 0x74,
	0x68, 0x6f, 0x75, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53,
	0x69, 0x7a, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x48, 0x00, 0x52, 0x1c, 0x73, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x73, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x74, 0x0a, 0x1a, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x22,
	0xf7, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x52, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72,
	0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x29,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x02, 0x22, 0x6d, 0x0a, 0x1e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xb2, 0x03, 0x0a, 0x1b, 0x4c, 0x69, 0x73,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x6e,
	0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x69, 0x6e,
	0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x62, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x1a, 0xb7, 0x01,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x45, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xca, 0x01,
	0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x10, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x0f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x88, 0x05, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x59, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x1a, 0xfa, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x41, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x69, 0x7a, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x00,
	0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x49, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x5a, 0x0a, 0x12, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f,
	0x6e, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x11, 0x69, 0x64, 0x6c, 0x65, 0x53,
	0x79, 0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x42, 0x06, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x1a, 0xae, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x12, 0x63, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61,
	0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x3b, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x49, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xab, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12,
	0x52, 0x0a, 0x0f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xd2, 0x01, 0x0a, 0x17, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x73, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x70, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x50, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x1a, 0x42, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x75, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a,
	0x15, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x12, 0x73, 0x69, 0x7a,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x53, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x64, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72,
	0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x64, 0x72,
	0x61, 0x69, 0x6e, 0x73, 0x22, 0xb4, 0x02, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x60, 0x0a, 0x15, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x69, 0x7a, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x12,
	0x73, 0x69, 0x7a, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x73, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f,
	0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x1a, 0x42, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x49, 0x64, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x14, 0x0a, 0x12, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x32, 0xc0, 0x09, 0x0a, 0x0f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x6f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72,
	0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72,
	0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a,
	0x0e, 0x4b, 0x69, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x30, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4b, 0x69, 0x6c, 0x6c,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x63, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x35, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62,
	0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d,
	0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x38, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87,
	0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62,
	0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x37, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62,
	0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61,
	0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x10, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x32, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x69, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72,
	0x61, 0x69, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e,
	0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x32, 0x2e,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x0b, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x32, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x62, 0x61, 0x72, 0x6e, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x44, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x61, 0x72, 0x6e, 0x2f, 0x62, 0x62, 0x2d,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescOnce sync.Once
	file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescData = file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDesc
)

func file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescGZIP() []byte {
	file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescOnce.Do(func() {
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescData)
	})
	return file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDescData
}

var file_pkg_proto_buildqueuestate_buildqueuestate_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_pkg_proto_buildqueuestate_buildqueuestate_proto_goTypes = []interface{}{
	(ListInvocationChildrenRequest_Filter)(0),      // 0: buildbarn.buildqueuestate.ListInvocationChildrenRequest.Filter
	(*PaginationInfo)(nil),                         // 1: buildbarn.buildqueuestate.PaginationInfo
	(*PlatformQueueName)(nil),                      // 2: buildbarn.buildqueuestate.PlatformQueueName
	(*SizeClassQueueName)(nil),                     // 3: buildbarn.buildqueuestate.SizeClassQueueName
	(*InvocationName)(nil),                         // 4: buildbarn.buildqueuestate.InvocationName
	(*OperationState)(nil),                         // 5: buildbarn.buildqueuestate.OperationState
	(*SizeClassQueueState)(nil),                    // 6: buildbarn.buildqueuestate.SizeClassQueueState
	(*PlatformQueueState)(nil),                     // 7: buildbarn.buildqueuestate.PlatformQueueState
	(*InvocationState)(nil),                        // 8: buildbarn.buildqueuestate.InvocationState
	(*InvocationChildState)(nil),                   // 9: buildbarn.buildqueuestate.InvocationChildState
	(*WorkerState)(nil),                            // 10: buildbarn.buildqueuestate.WorkerState
	(*DrainState)(nil),                             // 11: buildbarn.buildqueuestate.DrainState
	(*GetOperationRequest)(nil),                    // 12: buildbarn.buildqueuestate.GetOperationRequest
	(*GetOperationResponse)(nil),                   // 13: buildbarn.buildqueuestate.GetOperationResponse
	(*ListOperationsRequest)(nil),                  // 14: buildbarn.buildqueuestate.ListOperationsRequest
	(*ListOperationsResponse)(nil),                 // 15: buildbarn.buildqueuestate.ListOperationsResponse
	(*KillOperationsRequest)(nil),                  // 16: buildbarn.buildqueuestate.KillOperationsRequest
	(*ListPlatformQueuesResponse)(nil),             // 17: buildbarn.buildqueuestate.ListPlatformQueuesResponse
	(*ListInvocationChildrenRequest)(nil),          // 18: buildbarn.buildqueuestate.ListInvocationChildrenRequest
	(*ListInvocationChildrenResponse)(nil),         // 19: buildbarn.buildqueuestate.ListInvocationChildrenResponse
	(*ListQueuedOperationsRequest)(nil),            // 20: buildbarn.buildqueuestate.ListQueuedOperationsRequest
	(*ListQueuedOperationsResponse)(nil),           // 21: buildbarn.buildqueuestate.ListQueuedOperationsResponse
	(*ListWorkersRequest)(nil),                     // 22: buildbarn.buildqueuestate.ListWorkersRequest
	(*ListWorkersResponse)(nil),                    // 23: buildbarn.buildqueuestate.ListWorkersResponse
	(*TerminateWorkersRequest)(nil),                // 24: buildbarn.buildqueuestate.TerminateWorkersRequest
	(*ListDrainsRequest)(nil),                      // 25: buildbarn.buildqueuestate.ListDrainsRequest
	(*ListDrainsResponse)(nil),                     // 26: buildbarn.buildqueuestate.ListDrainsResponse
	(*AddOrRemoveDrainRequest)(nil),                // 27: buildbarn.buildqueuestate.AddOrRemoveDrainRequest
	(*BackgroundLearning)(nil),                     // 28: buildbarn.buildqueuestate.BackgroundLearning
	nil,                                            // 29: buildbarn.buildqueuestate.WorkerState.IdEntry
	nil,                                            // 30: buildbarn.buildqueuestate.DrainState.WorkerIdPatternEntry
	(*ListOperationsRequest_StartAfter)(nil),       // 31: buildbarn.buildqueuestate.ListOperationsRequest.StartAfter
	(*KillOperationsRequest_Filter)(nil),           // 32: buildbarn.buildqueuestate.KillOperationsRequest.Filter
	(*ListQueuedOperationsRequest_StartAfter)(nil), // 33: buildbarn.buildqueuestate.ListQueuedOperationsRequest.StartAfter
	(*ListWorkersRequest_Filter)(nil),              // 34: buildbarn.buildqueuestate.ListWorkersRequest.Filter
	(*ListWorkersRequest_StartAfter)(nil),          // 35: buildbarn.buildqueuestate.ListWorkersRequest.StartAfter
	nil,                                            // 36: buildbarn.buildqueuestate.ListWorkersRequest.StartAfter.WorkerIdEntry
	nil,                                            // 37: buildbarn.buildqueuestate.TerminateWorkersRequest.WorkerIdPatternEntry
	nil,                                            // 38: buildbarn.buildqueuestate.AddOrRemoveDrainRequest.WorkerIdPatternEntry
	(*v2.Platform)(nil),                            // 39: build.bazel.remote.execution.v2.Platform
	(*anypb.Any)(nil),                              // 40: google.protobuf.Any
	(*durationpb.Duration)(nil),                    // 41: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),                  // 42: google.protobuf.Timestamp
	(*v2.Digest)(nil),                              // 43: build.bazel.remote.execution.v2.Digest
	(*emptypb.Empty)(nil),                          // 44: google.protobuf.Empty
	(*v2.ExecuteResponse)(nil),                     // 45: build.bazel.remote.execution.v2.ExecuteResponse
	(v2.DigestFunction_Value)(0),                   // 46: build.bazel.remote.execution.v2.DigestFunction.Value
	(v2.ExecutionStage_Value)(0),                   // 47: build.bazel.remote.execution.v2.ExecutionStage.Value
	(*status.Status)(nil),                          // 48: google.rpc.Status
}
var file_pkg_proto_buildqueuestate_buildqueuestate_proto_depIdxs = []int32{
	39, // 0: buildbarn.buildqueuestate.PlatformQueueName.platform:type_name -> build.bazel.remote.execution.v2.Platform
	2,  // 1: buildbarn.buildqueuestate.SizeClassQueueName.platform_queue_name:type_name -> buildbarn.buildqueuestate.PlatformQueueName
	3,  // 2: buildbarn.buildqueuestate.InvocationName.size_class_queue_name:type_name -> buildbarn.buildqueuestate.SizeClassQueueName
	40, // 3: buildbarn.buildqueuestate.InvocationName.ids:type_name -> google.protobuf.Any
	4,  // 4: buildbarn.buildqueuestate.OperationState.invocation_name:type_name -> buildbarn.buildqueuestate.InvocationName
	41, // 5: buildbarn.buildqueuestate.OperationState.expected_duration:type_name -> google.protobuf.Duration
	42, // 6: buildbarn.buildqueuestate.OperationState.queued_timestamp:type_name -> google.protobuf.Timestamp
	43, // 7: buildbarn.buildqueuestate.OperationState.action_digest:type_name -> build.bazel.remote.execution.v2.Digest
	42, // 8: buildbarn.buildqueuestate.OperationState.timeout:type_name -> google.protobuf.Timestamp
	44, // 9: buildbarn.buildqueuestate.OperationState.queued:type_name -> google.protobuf.Empty
	44, // 10: buildbarn.buildqueuestate.OperationState.executing:type_name -> google.protobuf.Empty
	45, // 11: buildbarn.buildqueuestate.OperationState.completed:type_name -> build.bazel.remote.execution.v2.ExecuteResponse
	46, // 12: buildbarn.buildqueuestate.OperationState.digest_function:type_name -> build.bazel.remote.execution.v2.DigestFunction.Value
	42, // 13: buildbarn.buildqueuestate.SizeClassQueueState.timeout:type_name -> google.protobuf.Timestamp
	8,  // 14: buildbarn.buildqueuestate.SizeClassQueueState.root_invocation:type_name -> buildbarn.buildqueuestate.InvocationState
	2,  // 15: buildbarn.buildqueuestate.PlatformQueueState.name:type_name -> buildbarn.buildqueuestate.PlatformQueueName
	6,  // 16: buildbarn.buildqueuestate.PlatformQueueState.size_class_queues:type_name -> buildbarn.buildqueuestate.SizeClassQueueState
	40, // 17: buildbarn.buildqueuestate.InvocationChildState.id:type_name -> google.protobuf.Any
	8,  // 18: buildbarn.buildqueuestate.InvocationChildState.state:type_name -> buildbarn.buildqueuestate.InvocationState
	29, // 19: buildbarn.buildqueuestate.WorkerState.id:type_name -> buildbarn.buildqueuestate.WorkerState.IdEntry
	42, // 20: buildbarn.buildqueuestate.WorkerState.timeout:type_name -> google.protobuf.Timestamp
	5,  // 21: buildbarn.buildqueuestate.WorkerState.current_operation:type_name -> buildbarn.buildqueuestate.OperationState
	30, // 22: buildbarn.buildqueuestate.DrainState.worker_id_pattern:type_name -> buildbarn.buildqueuestate.DrainState.WorkerIdPatternEntry
	42, // 23: buildbarn.buildqueuestate.DrainState.created_timestamp:type_name -> google.protobuf.Timestamp
	5,  // 24: buildbarn.buildqueuestate.GetOperationResponse.operation:type_name -> buildbarn.buildqueuestate.OperationState
	31, // 25: buildbarn.buildqueuestate.ListOperationsRequest.start_after:type_name -> buildbarn.buildqueuestate.ListOperationsRequest.StartAfter
	40, // 26: buildbarn.buildqueuestate.ListOperationsRequest.filter_invocation_id:type_name -> google.protobuf.Any
	47, // 27: buildbarn.buildqueuestate.ListOperationsRequest.filter_stage:type_name -> build.bazel.remote.execution.v2.ExecutionStage.Value
	5,  // 28: buildbarn.buildqueuestate.ListOperationsResponse.operations:type_name -> buildbarn.buildqueuestate.OperationState
	1,  // 29: buildbarn.buildqueuestate.ListOperationsResponse.pagination_info:type_name -> buildbarn.buildqueuestate.PaginationInfo
	32, // 30: buildbarn.buildqueuestate.KillOperationsRequest.filter:type_name -> buildbarn.buildqueuestate.KillOperationsRequest.Filter
	48, // 31: buildbarn.buildqueuestate.KillOperationsRequest.status:type_name -> google.rpc.Status
	7,  // 32: buildbarn.buildqueuestate.ListPlatformQueuesResponse.platform_queues:type_name -> buildbarn.buildqueuestate.PlatformQueueState
	4,  // 33: buildbarn.buildqueuestate.ListInvocationChildrenRequest.invocation_name:type_name -> buildbarn.buildqueuestate.InvocationName
	0,  // 34: buildbarn.buildqueuestate.ListInvocationChildrenRequest.filter:type_name -> buildbarn.buildqueuestate.ListInvocationChildrenRequest.Filter
	9,  // 35: buildbarn.buildqueuestate.ListInvocationChildrenResponse.children:type_name -> buildbarn.buildqueuestate.InvocationChildState
	4,  // 36: buildbarn.buildqueuestate.ListQueuedOperationsRequest.invocation_name:type_name -> buildbarn.buildqueuestate.InvocationName
	33, // 37: buildbarn.buildqueuestate.ListQueuedOperationsRequest.start_after:type_name -> buildbarn.buildqueuestate.ListQueuedOperationsRequest.StartAfter
	5,  // 38: buildbarn.buildqueuestate.ListQueuedOperationsResponse.queued_operations:type_name -> buildbarn.buildqueuestate.OperationState
	1,  // 39: buildbarn.buildqueuestate.ListQueuedOperationsResponse.pagination_info:type_name -> buildbarn.buildqueuestate.PaginationInfo
	34, // 40: buildbarn.buildqueuestate.ListWorkersRequest.filter:type_name -> buildbarn.buildqueuestate.ListWorkersRequest.Filter
	35, // 41: buildbarn.buildqueuestate.ListWorkersRequest.start_after:type_name -> buildbarn.buildqueuestate.ListWorkersRequest.StartAfter
	10, // 42: buildbarn.buildqueuestate.ListWorkersResponse.workers:type_name -> buildbarn.buildqueuestate.WorkerState
	1,  // 43: buildbarn.buildqueuestate.ListWorkersResponse.pagination_info:type_name -> buildbarn.buildqueuestate.PaginationInfo
	37, // 44: buildbarn.buildqueuestate.TerminateWorkersRequest.worker_id_pattern:type_name -> buildbarn.buildqueuestate.TerminateWorkersRequest.WorkerIdPatternEntry
	3,  // 45: buildbarn.buildqueuestate.ListDrainsRequest.size_class_queue_name:type_name -> buildbarn.buildqueuestate.SizeClassQueueName
	11, // 46: buildbarn.buildqueuestate.ListDrainsResponse.drains:type_name -> buildbarn.buildqueuestate.DrainState
	3,  // 47: buildbarn.buildqueuestate.AddOrRemoveDrainRequest.size_class_queue_name:type_name -> buildbarn.buildqueuestate.SizeClassQueueName
	38, // 48: buildbarn.buildqueuestate.AddOrRemoveDrainRequest.worker_id_pattern:type_name -> buildbarn.buildqueuestate.AddOrRemoveDrainRequest.WorkerIdPatternEntry
	3,  // 49: buildbarn.buildqueuestate.KillOperationsRequest.Filter.size_class_queue_without_workers:type_name -> buildbarn.buildqueuestate.SizeClassQueueName
	41, // 50: buildbarn.buildqueuestate.ListQueuedOperationsRequest.StartAfter.expected_duration:type_name -> google.protobuf.Duration
	42, // 51: buildbarn.buildqueuestate.ListQueuedOperationsRequest.StartAfter.queued_timestamp:type_name -> google.protobuf.Timestamp
	3,  // 52: buildbarn.buildqueuestate.ListWorkersRequest.Filter.all:type_name -> buildbarn.buildqueuestate.SizeClassQueueName
	4,  // 53: buildbarn.buildqueuestate.ListWorkersRequest.Filter.executing:type_name -> buildbarn.buildqueuestate.InvocationName
	4,  // 54: buildbarn.buildqueuestate.ListWorkersRequest.Filter.idle_synchronizing:type_name -> buildbarn.buildqueuestate.InvocationName
	36, // 55: buildbarn.buildqueuestate.ListWorkersRequest.StartAfter.worker_id:type_name -> buildbarn.buildqueuestate.ListWorkersRequest.StartAfter.WorkerIdEntry
	12, // 56: buildbarn.buildqueuestate.BuildQueueState.GetOperation:input_type -> buildbarn.buildqueuestate.GetOperationRequest
	14, // 57: buildbarn.buildqueuestate.BuildQueueState.ListOperations:input_type -> buildbarn.buildqueuestate.ListOperationsRequest
	16, // 58: buildbarn.buildqueuestate.BuildQueueState.KillOperations:input_type -> buildbarn.buildqueuestate.KillOperationsRequest
	44, // 59: buildbarn.buildqueuestate.BuildQueueState.ListPlatformQueues:input_type -> google.protobuf.Empty
	18, // 60: buildbarn.buildqueuestate.BuildQueueState.ListInvocationChildren:input_type -> buildbarn.buildqueuestate.ListInvocationChildrenRequest
	20, // 61: buildbarn.buildqueuestate.BuildQueueState.ListQueuedOperations:input_type -> buildbarn.buildqueuestate.ListQueuedOperationsRequest
	22, // 62: buildbarn.buildqueuestate.BuildQueueState.ListWorkers:input_type -> buildbarn.buildqueuestate.ListWorkersRequest
	24, // 63: buildbarn.buildqueuestate.BuildQueueState.TerminateWorkers:input_type -> buildbarn.buildqueuestate.TerminateWorkersRequest
	25, // 64: buildbarn.buildqueuestate.BuildQueueState.ListDrains:input_type -> buildbarn.buildqueuestate.ListDrainsRequest
	27, // 65: buildbarn.buildqueuestate.BuildQueueState.AddDrain:input_type -> buildbarn.buildqueuestate.AddOrRemoveDrainRequest
	27, // 66: buildbarn.buildqueuestate.BuildQueueState.RemoveDrain:input_type -> buildbarn.buildqueuestate.AddOrRemoveDrainRequest
	13, // 67: buildbarn.buildqueuestate.BuildQueueState.GetOperation:output_type -> buildbarn.buildqueuestate.GetOperationResponse
	15, // 68: buildbarn.buildqueuestate.BuildQueueState.ListOperations:output_type -> buildbarn.buildqueuestate.ListOperationsResponse
	44, // 69: buildbarn.buildqueuestate.BuildQueueState.KillOperations:output_type -> google.protobuf.Empty
	17, // 70: buildbarn.buildqueuestate.BuildQueueState.ListPlatformQueues:output_type -> buildbarn.buildqueuestate.ListPlatformQueuesResponse
	19, // 71: buildbarn.buildqueuestate.BuildQueueState.ListInvocationChildren:output_type -> buildbarn.buildqueuestate.ListInvocationChildrenResponse
	21, // 72: buildbarn.buildqueuestate.BuildQueueState.ListQueuedOperations:output_type -> buildbarn.buildqueuestate.ListQueuedOperationsResponse
	23, // 73: buildbarn.buildqueuestate.BuildQueueState.ListWorkers:output_type -> buildbarn.buildqueuestate.ListWorkersResponse
	44, // 74: buildbarn.buildqueuestate.BuildQueueState.TerminateWorkers:output_type -> google.protobuf.Empty
	26, // 75: buildbarn.buildqueuestate.BuildQueueState.ListDrains:output_type -> buildbarn.buildqueuestate.ListDrainsResponse
	44, // 76: buildbarn.buildqueuestate.BuildQueueState.AddDrain:output_type -> google.protobuf.Empty
	44, // 77: buildbarn.buildqueuestate.BuildQueueState.RemoveDrain:output_type -> google.protobuf.Empty
	67, // [67:78] is the sub-list for method output_type
	56, // [56:67] is the sub-list for method input_type
	56, // [56:56] is the sub-list for extension type_name
	56, // [56:56] is the sub-list for extension extendee
	0,  // [0:56] is the sub-list for field type_name
}

func init() { file_pkg_proto_buildqueuestate_buildqueuestate_proto_init() }
func file_pkg_proto_buildqueuestate_buildqueuestate_proto_init() {
	if File_pkg_proto_buildqueuestate_buildqueuestate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformQueueName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SizeClassQueueName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvocationName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SizeClassQueueState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformQueueState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvocationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvocationChildState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrainState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOperationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillOperationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformQueuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInvocationChildrenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInvocationChildrenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQueuedOperationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQueuedOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateWorkersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDrainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDrainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrRemoveDrainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackgroundLearning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOperationsRequest_StartAfter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillOperationsRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQueuedOperationsRequest_StartAfter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkersRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkersRequest_StartAfter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*OperationState_Queued)(nil),
		(*OperationState_Executing)(nil),
		(*OperationState_Completed)(nil),
	}
	file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*KillOperationsRequest_Filter_OperationName)(nil),
		(*KillOperationsRequest_Filter_SizeClassQueueWithoutWorkers)(nil),
	}
	file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*ListWorkersRequest_Filter_All)(nil),
		(*ListWorkersRequest_Filter_Executing)(nil),
		(*ListWorkersRequest_Filter_IdleSynchronizing)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_buildqueuestate_buildqueuestate_proto_goTypes,
		DependencyIndexes: file_pkg_proto_buildqueuestate_buildqueuestate_proto_depIdxs,
		EnumInfos:         file_pkg_proto_buildqueuestate_buildqueuestate_proto_enumTypes,
		MessageInfos:      file_pkg_proto_buildqueuestate_buildqueuestate_proto_msgTypes,
	}.Build()
	File_pkg_proto_buildqueuestate_buildqueuestate_proto = out.File
	file_pkg_proto_buildqueuestate_buildqueuestate_proto_rawDesc = nil
	file_pkg_proto_buildqueuestate_buildqueuestate_proto_goTypes = nil
	file_pkg_proto_buildqueuestate_buildqueuestate_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BuildQueueStateClient is the client API for BuildQueueState service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BuildQueueStateClient interface {
	GetOperation(ctx context.Context, in *GetOperationRequest, opts ...grpc.CallOption) (*GetOperationResponse, error)
	ListOperations(ctx context.Context, in *ListOperationsRequest, opts ...grpc.CallOption) (*ListOperationsResponse, error)
	KillOperations(ctx context.Context, in *KillOperationsRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ListPlatformQueues(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListPlatformQueuesResponse, error)
	ListInvocationChildren(ctx context.Context, in *ListInvocationChildrenRequest, opts ...grpc.CallOption) (*ListInvocationChildrenResponse, error)
	ListQueuedOperations(ctx context.Context, in *ListQueuedOperationsRequest, opts ...grpc.CallOption) (*ListQueuedOperationsResponse, error)
	ListWorkers(ctx context.Context, in *ListWorkersRequest, opts ...grpc.CallOption) (*ListWorkersResponse, error)
	TerminateWorkers(ctx context.Context, in *TerminateWorkersRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ListDrains(ctx context.Context, in *ListDrainsRequest, opts ...grpc.CallOption) (*ListDrainsResponse, error)
	AddDrain(ctx context.Context, in *AddOrRemoveDrainRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	RemoveDrain(ctx context.Context, in *AddOrRemoveDrainRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type buildQueueStateClient struct {
	cc grpc.ClientConnInterface
}

func NewBuildQueueStateClient(cc grpc.ClientConnInterface) BuildQueueStateClient {
	return &buildQueueStateClient{cc}
}

func (c *buildQueueStateClient) GetOperation(ctx context.Context, in *GetOperationRequest, opts ...grpc.CallOption) (*GetOperationResponse, error) {
	out := new(GetOperationResponse)
	err := c.cc.Invoke(ctx, "/buildbarn.buildqueuestate.BuildQueueState/GetOperation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildQueueStateClient) ListOperations(ctx context.Context, in *ListOperationsRequest, opts ...grpc.CallOption) (*ListOperationsResponse, error) {
	out := new(ListOperationsResponse)
	err := c.cc.Invoke(ctx, "/buildbarn.buildqueuestate.BuildQueueState/ListOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildQueueStateClient) KillOperations(ctx context.Context, in *KillOperationsRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/buildbarn.buildqueuestate.BuildQueueState/KillOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildQueueStateClient) ListPlatformQueues(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListPlatformQueuesResponse, error) {
	out := new(ListPlatformQueuesResponse)
	err := c.cc.Invoke(ctx, "/buildbarn.buildqueuestate.BuildQueueState/ListPlatformQueues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildQueueStateClient) ListInvocationChildren(ctx context.Context, in *ListInvocationChildrenRequest, opts ...grpc.CallOption) (*ListInvocationChildrenResponse, error) {
	out := new(ListInvocationChildrenResponse)
	err := c.cc.Invoke(ctx, "/buildbarn.buildqueuestate.BuildQueueState/ListInvocationChildren", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildQueueStateClient) ListQueuedOperations(ctx context.Context, in *ListQueuedOperationsRequest, opts ...grpc.CallOption) (*ListQueuedOperationsResponse, error) {
	out := new(ListQueuedOperationsResponse)
	err := c.cc.Invoke(ctx, "/buildbarn.buildqueuestate.BuildQueueState/ListQueuedOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildQueueStateClient) ListWorkers(ctx context.Context, in *ListWorkersRequest, opts ...grpc.CallOption) (*ListWorkersResponse, error) {
	out := new(ListWorkersResponse)
	err := c.cc.Invoke(ctx, "/buildbarn.buildqueuestate.BuildQueueState/ListWorkers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildQueueStateClient) TerminateWorkers(ctx context.Context, in *TerminateWorkersRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/buildbarn.buildqueuestate.BuildQueueState/TerminateWorkers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildQueueStateClient) ListDrains(ctx context.Context, in *ListDrainsRequest, opts ...grpc.CallOption) (*ListDrainsResponse, error) {
	out := new(ListDrainsResponse)
	err := c.cc.Invoke(ctx, "/buildbarn.buildqueuestate.BuildQueueState/ListDrains", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildQueueStateClient) AddDrain(ctx context.Context, in *AddOrRemoveDrainRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/buildbarn.buildqueuestate.BuildQueueState/AddDrain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildQueueStateClient) RemoveDrain(ctx context.Context, in *AddOrRemoveDrainRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/buildbarn.buildqueuestate.BuildQueueState/RemoveDrain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BuildQueueStateServer is the server API for BuildQueueState service.
type BuildQueueStateServer interface {
	GetOperation(context.Context, *GetOperationRequest) (*GetOperationResponse, error)
	ListOperations(context.Context, *ListOperationsRequest) (*ListOperationsResponse, error)
	KillOperations(context.Context, *KillOperationsRequest) (*emptypb.Empty, error)
	ListPlatformQueues(context.Context, *emptypb.Empty) (*ListPlatformQueuesResponse, error)
	ListInvocationChildren(context.Context, *ListInvocationChildrenRequest) (*ListInvocationChildrenResponse, error)
	ListQueuedOperations(context.Context, *ListQueuedOperationsRequest) (*ListQueuedOperationsResponse, error)
	ListWorkers(context.Context, *ListWorkersRequest) (*ListWorkersResponse, error)
	TerminateWorkers(context.Context, *TerminateWorkersRequest) (*emptypb.Empty, error)
	ListDrains(context.Context, *ListDrainsRequest) (*ListDrainsResponse, error)
	AddDrain(context.Context, *AddOrRemoveDrainRequest) (*emptypb.Empty, error)
	RemoveDrain(context.Context, *AddOrRemoveDrainRequest) (*emptypb.Empty, error)
}

// UnimplementedBuildQueueStateServer can be embedded to have forward compatible implementations.
type UnimplementedBuildQueueStateServer struct {
}

func (*UnimplementedBuildQueueStateServer) GetOperation(context.Context, *GetOperationRequest) (*GetOperationResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetOperation not implemented")
}
func (*UnimplementedBuildQueueStateServer) ListOperations(context.Context, *ListOperationsRequest) (*ListOperationsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListOperations not implemented")
}
func (*UnimplementedBuildQueueStateServer) KillOperations(context.Context, *KillOperationsRequest) (*emptypb.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method KillOperations not implemented")
}
func (*UnimplementedBuildQueueStateServer) ListPlatformQueues(context.Context, *emptypb.Empty) (*ListPlatformQueuesResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListPlatformQueues not implemented")
}
func (*UnimplementedBuildQueueStateServer) ListInvocationChildren(context.Context, *ListInvocationChildrenRequest) (*ListInvocationChildrenResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListInvocationChildren not implemented")
}
func (*UnimplementedBuildQueueStateServer) ListQueuedOperations(context.Context, *ListQueuedOperationsRequest) (*ListQueuedOperationsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListQueuedOperations not implemented")
}
func (*UnimplementedBuildQueueStateServer) ListWorkers(context.Context, *ListWorkersRequest) (*ListWorkersResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListWorkers not implemented")
}
func (*UnimplementedBuildQueueStateServer) TerminateWorkers(context.Context, *TerminateWorkersRequest) (*emptypb.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method TerminateWorkers not implemented")
}
func (*UnimplementedBuildQueueStateServer) ListDrains(context.Context, *ListDrainsRequest) (*ListDrainsResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ListDrains not implemented")
}
func (*UnimplementedBuildQueueStateServer) AddDrain(context.Context, *AddOrRemoveDrainRequest) (*emptypb.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method AddDrain not implemented")
}
func (*UnimplementedBuildQueueStateServer) RemoveDrain(context.Context, *AddOrRemoveDrainRequest) (*emptypb.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method RemoveDrain not implemented")
}

func RegisterBuildQueueStateServer(s grpc.ServiceRegistrar, srv BuildQueueStateServer) {
	s.RegisterService(&_BuildQueueState_serviceDesc, srv)
}

func _BuildQueueState_GetOperation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOperationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildQueueStateServer).GetOperation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildbarn.buildqueuestate.BuildQueueState/GetOperation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildQueueStateServer).GetOperation(ctx, req.(*GetOperationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildQueueState_ListOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildQueueStateServer).ListOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildbarn.buildqueuestate.BuildQueueState/ListOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildQueueStateServer).ListOperations(ctx, req.(*ListOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildQueueState_KillOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KillOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildQueueStateServer).KillOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildbarn.buildqueuestate.BuildQueueState/KillOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildQueueStateServer).KillOperations(ctx, req.(*KillOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildQueueState_ListPlatformQueues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildQueueStateServer).ListPlatformQueues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildbarn.buildqueuestate.BuildQueueState/ListPlatformQueues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildQueueStateServer).ListPlatformQueues(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildQueueState_ListInvocationChildren_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInvocationChildrenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildQueueStateServer).ListInvocationChildren(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildbarn.buildqueuestate.BuildQueueState/ListInvocationChildren",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildQueueStateServer).ListInvocationChildren(ctx, req.(*ListInvocationChildrenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildQueueState_ListQueuedOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListQueuedOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildQueueStateServer).ListQueuedOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildbarn.buildqueuestate.BuildQueueState/ListQueuedOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildQueueStateServer).ListQueuedOperations(ctx, req.(*ListQueuedOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildQueueState_ListWorkers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWorkersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildQueueStateServer).ListWorkers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildbarn.buildqueuestate.BuildQueueState/ListWorkers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildQueueStateServer).ListWorkers(ctx, req.(*ListWorkersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildQueueState_TerminateWorkers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateWorkersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildQueueStateServer).TerminateWorkers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildbarn.buildqueuestate.BuildQueueState/TerminateWorkers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildQueueStateServer).TerminateWorkers(ctx, req.(*TerminateWorkersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildQueueState_ListDrains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDrainsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildQueueStateServer).ListDrains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildbarn.buildqueuestate.BuildQueueState/ListDrains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildQueueStateServer).ListDrains(ctx, req.(*ListDrainsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildQueueState_AddDrain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddOrRemoveDrainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildQueueStateServer).AddDrain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildbarn.buildqueuestate.BuildQueueState/AddDrain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildQueueStateServer).AddDrain(ctx, req.(*AddOrRemoveDrainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BuildQueueState_RemoveDrain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddOrRemoveDrainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildQueueStateServer).RemoveDrain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildbarn.buildqueuestate.BuildQueueState/RemoveDrain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildQueueStateServer).RemoveDrain(ctx, req.(*AddOrRemoveDrainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BuildQueueState_serviceDesc = grpc.ServiceDesc{
	ServiceName: "buildbarn.buildqueuestate.BuildQueueState",
	HandlerType: (*BuildQueueStateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOperation",
			Handler:    _BuildQueueState_GetOperation_Handler,
		},
		{
			MethodName: "ListOperations",
			Handler:    _BuildQueueState_ListOperations_Handler,
		},
		{
			MethodName: "KillOperations",
			Handler:    _BuildQueueState_KillOperations_Handler,
		},
		{
			MethodName: "ListPlatformQueues",
			Handler:    _BuildQueueState_ListPlatformQueues_Handler,
		},
		{
			MethodName: "ListInvocationChildren",
			Handler:    _BuildQueueState_ListInvocationChildren_Handler,
		},
		{
			MethodName: "ListQueuedOperations",
			Handler:    _BuildQueueState_ListQueuedOperations_Handler,
		},
		{
			MethodName: "ListWorkers",
			Handler:    _BuildQueueState_ListWorkers_Handler,
		},
		{
			MethodName: "TerminateWorkers",
			Handler:    _BuildQueueState_TerminateWorkers_Handler,
		},
		{
			MethodName: "ListDrains",
			Handler:    _BuildQueueState_ListDrains_Handler,
		},
		{
			MethodName: "AddDrain",
			Handler:    _BuildQueueState_AddDrain_Handler,
		},
		{
			MethodName: "RemoveDrain",
			Handler:    _BuildQueueState_RemoveDrain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/proto/buildqueuestate/buildqueuestate.proto",
}
