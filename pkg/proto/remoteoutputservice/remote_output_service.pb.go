// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: pkg/proto/remoteoutputservice/remote_output_service.proto

package remoteoutputservice

import (
	context "context"
	v2 "github.com/bazelbuild/remote-apis/build/bazel/remote/execution/v2"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CleanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputBaseId string `protobuf:"bytes,1,opt,name=output_base_id,json=outputBaseId,proto3" json:"output_base_id,omitempty"`
}

func (x *CleanRequest) Reset() {
	*x = CleanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanRequest) ProtoMessage() {}

func (x *CleanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanRequest.ProtoReflect.Descriptor instead.
func (*CleanRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{0}
}

func (x *CleanRequest) GetOutputBaseId() string {
	if x != nil {
		return x.OutputBaseId
	}
	return ""
}

type StartBuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputBaseId      string                  `protobuf:"bytes,1,opt,name=output_base_id,json=outputBaseId,proto3" json:"output_base_id,omitempty"`
	BuildId           string                  `protobuf:"bytes,2,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	InstanceName      string                  `protobuf:"bytes,3,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	DigestFunction    v2.DigestFunction_Value `protobuf:"varint,4,opt,name=digest_function,json=digestFunction,proto3,enum=build.bazel.remote.execution.v2.DigestFunction_Value" json:"digest_function,omitempty"`
	OutputPathPrefix  string                  `protobuf:"bytes,5,opt,name=output_path_prefix,json=outputPathPrefix,proto3" json:"output_path_prefix,omitempty"`
	OutputPathAliases map[string]string       `protobuf:"bytes,6,rep,name=output_path_aliases,json=outputPathAliases,proto3" json:"output_path_aliases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *StartBuildRequest) Reset() {
	*x = StartBuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBuildRequest) ProtoMessage() {}

func (x *StartBuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBuildRequest.ProtoReflect.Descriptor instead.
func (*StartBuildRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{1}
}

func (x *StartBuildRequest) GetOutputBaseId() string {
	if x != nil {
		return x.OutputBaseId
	}
	return ""
}

func (x *StartBuildRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *StartBuildRequest) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *StartBuildRequest) GetDigestFunction() v2.DigestFunction_Value {
	if x != nil {
		return x.DigestFunction
	}
	return v2.DigestFunction_Value(0)
}

func (x *StartBuildRequest) GetOutputPathPrefix() string {
	if x != nil {
		return x.OutputPathPrefix
	}
	return ""
}

func (x *StartBuildRequest) GetOutputPathAliases() map[string]string {
	if x != nil {
		return x.OutputPathAliases
	}
	return nil
}

type InitialOutputPathContents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId       string   `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	ModifiedPaths []string `protobuf:"bytes,2,rep,name=modified_paths,json=modifiedPaths,proto3" json:"modified_paths,omitempty"`
}

func (x *InitialOutputPathContents) Reset() {
	*x = InitialOutputPathContents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitialOutputPathContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitialOutputPathContents) ProtoMessage() {}

func (x *InitialOutputPathContents) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitialOutputPathContents.ProtoReflect.Descriptor instead.
func (*InitialOutputPathContents) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{2}
}

func (x *InitialOutputPathContents) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *InitialOutputPathContents) GetModifiedPaths() []string {
	if x != nil {
		return x.ModifiedPaths
	}
	return nil
}

type StartBuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitialOutputPathContents *InitialOutputPathContents `protobuf:"bytes,1,opt,name=initial_output_path_contents,json=initialOutputPathContents,proto3" json:"initial_output_path_contents,omitempty"`
	OutputPathSuffix          string                     `protobuf:"bytes,2,opt,name=output_path_suffix,json=outputPathSuffix,proto3" json:"output_path_suffix,omitempty"`
}

func (x *StartBuildResponse) Reset() {
	*x = StartBuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBuildResponse) ProtoMessage() {}

func (x *StartBuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBuildResponse.ProtoReflect.Descriptor instead.
func (*StartBuildResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{3}
}

func (x *StartBuildResponse) GetInitialOutputPathContents() *InitialOutputPathContents {
	if x != nil {
		return x.InitialOutputPathContents
	}
	return nil
}

func (x *StartBuildResponse) GetOutputPathSuffix() string {
	if x != nil {
		return x.OutputPathSuffix
	}
	return ""
}

type BatchCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId         string                `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	PathPrefix      string                `protobuf:"bytes,2,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	CleanPathPrefix bool                  `protobuf:"varint,3,opt,name=clean_path_prefix,json=cleanPathPrefix,proto3" json:"clean_path_prefix,omitempty"`
	Files           []*v2.OutputFile      `protobuf:"bytes,4,rep,name=files,proto3" json:"files,omitempty"`
	Symlinks        []*v2.OutputSymlink   `protobuf:"bytes,5,rep,name=symlinks,proto3" json:"symlinks,omitempty"`
	Directories     []*v2.OutputDirectory `protobuf:"bytes,6,rep,name=directories,proto3" json:"directories,omitempty"`
}

func (x *BatchCreateRequest) Reset() {
	*x = BatchCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateRequest) ProtoMessage() {}

func (x *BatchCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{4}
}

func (x *BatchCreateRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *BatchCreateRequest) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *BatchCreateRequest) GetCleanPathPrefix() bool {
	if x != nil {
		return x.CleanPathPrefix
	}
	return false
}

func (x *BatchCreateRequest) GetFiles() []*v2.OutputFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *BatchCreateRequest) GetSymlinks() []*v2.OutputSymlink {
	if x != nil {
		return x.Symlinks
	}
	return nil
}

func (x *BatchCreateRequest) GetDirectories() []*v2.OutputDirectory {
	if x != nil {
		return x.Directories
	}
	return nil
}

type BatchStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId              string   `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	IncludeFileDigest    bool     `protobuf:"varint,2,opt,name=include_file_digest,json=includeFileDigest,proto3" json:"include_file_digest,omitempty"`
	IncludeSymlinkTarget bool     `protobuf:"varint,3,opt,name=include_symlink_target,json=includeSymlinkTarget,proto3" json:"include_symlink_target,omitempty"`
	FollowSymlinks       bool     `protobuf:"varint,4,opt,name=follow_symlinks,json=followSymlinks,proto3" json:"follow_symlinks,omitempty"`
	Paths                []string `protobuf:"bytes,5,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *BatchStatRequest) Reset() {
	*x = BatchStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchStatRequest) ProtoMessage() {}

func (x *BatchStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchStatRequest.ProtoReflect.Descriptor instead.
func (*BatchStatRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{5}
}

func (x *BatchStatRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *BatchStatRequest) GetIncludeFileDigest() bool {
	if x != nil {
		return x.IncludeFileDigest
	}
	return false
}

func (x *BatchStatRequest) GetIncludeSymlinkTarget() bool {
	if x != nil {
		return x.IncludeSymlinkTarget
	}
	return false
}

func (x *BatchStatRequest) GetFollowSymlinks() bool {
	if x != nil {
		return x.FollowSymlinks
	}
	return false
}

func (x *BatchStatRequest) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type BatchStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*StatResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *BatchStatResponse) Reset() {
	*x = BatchStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchStatResponse) ProtoMessage() {}

func (x *BatchStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchStatResponse.ProtoReflect.Descriptor instead.
func (*BatchStatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{6}
}

func (x *BatchStatResponse) GetResponses() []*StatResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type StatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileStatus *FileStatus `protobuf:"bytes,1,opt,name=file_status,json=fileStatus,proto3" json:"file_status,omitempty"`
}

func (x *StatResponse) Reset() {
	*x = StatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatResponse) ProtoMessage() {}

func (x *StatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatResponse.ProtoReflect.Descriptor instead.
func (*StatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{7}
}

func (x *StatResponse) GetFileStatus() *FileStatus {
	if x != nil {
		return x.FileStatus
	}
	return nil
}

type FileStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to FileType:
	//
	//	*FileStatus_File_
	//	*FileStatus_Symlink_
	//	*FileStatus_Directory_
	//	*FileStatus_External_
	FileType isFileStatus_FileType `protobuf_oneof:"file_type"`
}

func (x *FileStatus) Reset() {
	*x = FileStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStatus) ProtoMessage() {}

func (x *FileStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStatus.ProtoReflect.Descriptor instead.
func (*FileStatus) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{8}
}

func (m *FileStatus) GetFileType() isFileStatus_FileType {
	if m != nil {
		return m.FileType
	}
	return nil
}

func (x *FileStatus) GetFile() *FileStatus_File {
	if x, ok := x.GetFileType().(*FileStatus_File_); ok {
		return x.File
	}
	return nil
}

func (x *FileStatus) GetSymlink() *FileStatus_Symlink {
	if x, ok := x.GetFileType().(*FileStatus_Symlink_); ok {
		return x.Symlink
	}
	return nil
}

func (x *FileStatus) GetDirectory() *FileStatus_Directory {
	if x, ok := x.GetFileType().(*FileStatus_Directory_); ok {
		return x.Directory
	}
	return nil
}

func (x *FileStatus) GetExternal() *FileStatus_External {
	if x, ok := x.GetFileType().(*FileStatus_External_); ok {
		return x.External
	}
	return nil
}

type isFileStatus_FileType interface {
	isFileStatus_FileType()
}

type FileStatus_File_ struct {
	File *FileStatus_File `protobuf:"bytes,1,opt,name=file,proto3,oneof"`
}

type FileStatus_Symlink_ struct {
	Symlink *FileStatus_Symlink `protobuf:"bytes,2,opt,name=symlink,proto3,oneof"`
}

type FileStatus_Directory_ struct {
	Directory *FileStatus_Directory `protobuf:"bytes,3,opt,name=directory,proto3,oneof"`
}

type FileStatus_External_ struct {
	External *FileStatus_External `protobuf:"bytes,4,opt,name=external,proto3,oneof"`
}

func (*FileStatus_File_) isFileStatus_FileType() {}

func (*FileStatus_Symlink_) isFileStatus_FileType() {}

func (*FileStatus_Directory_) isFileStatus_FileType() {}

func (*FileStatus_External_) isFileStatus_FileType() {}

type FinalizeBuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId         string `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	BuildSuccessful bool   `protobuf:"varint,2,opt,name=build_successful,json=buildSuccessful,proto3" json:"build_successful,omitempty"`
}

func (x *FinalizeBuildRequest) Reset() {
	*x = FinalizeBuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizeBuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeBuildRequest) ProtoMessage() {}

func (x *FinalizeBuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeBuildRequest.ProtoReflect.Descriptor instead.
func (*FinalizeBuildRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{9}
}

func (x *FinalizeBuildRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *FinalizeBuildRequest) GetBuildSuccessful() bool {
	if x != nil {
		return x.BuildSuccessful
	}
	return false
}

type FileStatus_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest *v2.Digest `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *FileStatus_File) Reset() {
	*x = FileStatus_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileStatus_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStatus_File) ProtoMessage() {}

func (x *FileStatus_File) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStatus_File.ProtoReflect.Descriptor instead.
func (*FileStatus_File) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *FileStatus_File) GetDigest() *v2.Digest {
	if x != nil {
		return x.Digest
	}
	return nil
}

type FileStatus_Symlink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *FileStatus_Symlink) Reset() {
	*x = FileStatus_Symlink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileStatus_Symlink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStatus_Symlink) ProtoMessage() {}

func (x *FileStatus_Symlink) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStatus_Symlink.ProtoReflect.Descriptor instead.
func (*FileStatus_Symlink) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{8, 1}
}

func (x *FileStatus_Symlink) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type FileStatus_Directory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastModifiedTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_modified_time,json=lastModifiedTime,proto3" json:"last_modified_time,omitempty"`
}

func (x *FileStatus_Directory) Reset() {
	*x = FileStatus_Directory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileStatus_Directory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStatus_Directory) ProtoMessage() {}

func (x *FileStatus_Directory) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStatus_Directory.ProtoReflect.Descriptor instead.
func (*FileStatus_Directory) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{8, 2}
}

func (x *FileStatus_Directory) GetLastModifiedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModifiedTime
	}
	return nil
}

type FileStatus_External struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPath string `protobuf:"bytes,1,opt,name=next_path,json=nextPath,proto3" json:"next_path,omitempty"`
}

func (x *FileStatus_External) Reset() {
	*x = FileStatus_External{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileStatus_External) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStatus_External) ProtoMessage() {}

func (x *FileStatus_External) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStatus_External.ProtoReflect.Descriptor instead.
func (*FileStatus_External) Descriptor() ([]byte, []int) {
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP(), []int{8, 3}
}

func (x *FileStatus_External) GetNextPath() string {
	if x != nil {
		return x.NextPath
	}
	return ""
}

var File_pkg_proto_remoteoutputservice_remote_output_service_proto protoreflect.FileDescriptor

var file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDesc = []byte{
	0x0a, 0x39, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x1a, 0x36, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x61, 0x7a, 0x65, 0x6c, 0x2f,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x0c, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0xbe,
	0x03, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x42, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x64, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x61, 0x7a, 0x65,
	0x6c, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x6f, 0x0a, 0x13, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x1a, 0x44, 0x0a, 0x16, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x5d, 0x0a, 0x19, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68, 0x73, 0x22, 0xb5,
	0x01, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x1c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x19, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x22, 0xdf, 0x02, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6c, 0x65,
	0x61, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x41, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x61, 0x7a,
	0x65, 0x6c, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x08, 0x73, 0x79, 0x6d, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x62, 0x61, 0x7a, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x12, 0x52, 0x0a, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x2e, 0x62, 0x61, 0x7a, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0b, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x10, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53,
	0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x56, 0x0a,
	0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa1, 0x04, 0x0a, 0x0a, 0x46, 0x69,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x79, 0x6d, 0x6c, 0x69,
	0x6e, 0x6b, 0x48, 0x00, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x4b, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x08, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x1a, 0x47, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x06,
	0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x2e, 0x62, 0x61, 0x7a, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x0a,
	0x07, 0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x1a, 0x55, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x48, 0x0a,
	0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x27, 0x0a, 0x08, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x42, 0x0b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5c, 0x0a,
	0x14, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x66, 0x75, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x32, 0xc6, 0x03, 0x0a, 0x13,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x23, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x61, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x28, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5e,
	0x0a, 0x09, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x12, 0x27, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12,
	0x2b, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x42, 0x55, 0x0a, 0x24, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x2e, 0x6c, 0x69, 0x62, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x42, 0x18, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x13, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescOnce sync.Once
	file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescData = file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDesc
)

func file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescGZIP() []byte {
	file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescOnce.Do(func() {
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescData)
	})
	return file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDescData
}

var file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_pkg_proto_remoteoutputservice_remote_output_service_proto_goTypes = []interface{}{
	(*CleanRequest)(nil),              // 0: remote_output_service.CleanRequest
	(*StartBuildRequest)(nil),         // 1: remote_output_service.StartBuildRequest
	(*InitialOutputPathContents)(nil), // 2: remote_output_service.InitialOutputPathContents
	(*StartBuildResponse)(nil),        // 3: remote_output_service.StartBuildResponse
	(*BatchCreateRequest)(nil),        // 4: remote_output_service.BatchCreateRequest
	(*BatchStatRequest)(nil),          // 5: remote_output_service.BatchStatRequest
	(*BatchStatResponse)(nil),         // 6: remote_output_service.BatchStatResponse
	(*StatResponse)(nil),              // 7: remote_output_service.StatResponse
	(*FileStatus)(nil),                // 8: remote_output_service.FileStatus
	(*FinalizeBuildRequest)(nil),      // 9: remote_output_service.FinalizeBuildRequest
	nil,                               // 10: remote_output_service.StartBuildRequest.OutputPathAliasesEntry
	(*FileStatus_File)(nil),           // 11: remote_output_service.FileStatus.File
	(*FileStatus_Symlink)(nil),        // 12: remote_output_service.FileStatus.Symlink
	(*FileStatus_Directory)(nil),      // 13: remote_output_service.FileStatus.Directory
	(*FileStatus_External)(nil),       // 14: remote_output_service.FileStatus.External
	(v2.DigestFunction_Value)(0),      // 15: build.bazel.remote.execution.v2.DigestFunction.Value
	(*v2.OutputFile)(nil),             // 16: build.bazel.remote.execution.v2.OutputFile
	(*v2.OutputSymlink)(nil),          // 17: build.bazel.remote.execution.v2.OutputSymlink
	(*v2.OutputDirectory)(nil),        // 18: build.bazel.remote.execution.v2.OutputDirectory
	(*v2.Digest)(nil),                 // 19: build.bazel.remote.execution.v2.Digest
	(*timestamppb.Timestamp)(nil),     // 20: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),             // 21: google.protobuf.Empty
}
var file_pkg_proto_remoteoutputservice_remote_output_service_proto_depIdxs = []int32{
	15, // 0: remote_output_service.StartBuildRequest.digest_function:type_name -> build.bazel.remote.execution.v2.DigestFunction.Value
	10, // 1: remote_output_service.StartBuildRequest.output_path_aliases:type_name -> remote_output_service.StartBuildRequest.OutputPathAliasesEntry
	2,  // 2: remote_output_service.StartBuildResponse.initial_output_path_contents:type_name -> remote_output_service.InitialOutputPathContents
	16, // 3: remote_output_service.BatchCreateRequest.files:type_name -> build.bazel.remote.execution.v2.OutputFile
	17, // 4: remote_output_service.BatchCreateRequest.symlinks:type_name -> build.bazel.remote.execution.v2.OutputSymlink
	18, // 5: remote_output_service.BatchCreateRequest.directories:type_name -> build.bazel.remote.execution.v2.OutputDirectory
	7,  // 6: remote_output_service.BatchStatResponse.responses:type_name -> remote_output_service.StatResponse
	8,  // 7: remote_output_service.StatResponse.file_status:type_name -> remote_output_service.FileStatus
	11, // 8: remote_output_service.FileStatus.file:type_name -> remote_output_service.FileStatus.File
	12, // 9: remote_output_service.FileStatus.symlink:type_name -> remote_output_service.FileStatus.Symlink
	13, // 10: remote_output_service.FileStatus.directory:type_name -> remote_output_service.FileStatus.Directory
	14, // 11: remote_output_service.FileStatus.external:type_name -> remote_output_service.FileStatus.External
	19, // 12: remote_output_service.FileStatus.File.digest:type_name -> build.bazel.remote.execution.v2.Digest
	20, // 13: remote_output_service.FileStatus.Directory.last_modified_time:type_name -> google.protobuf.Timestamp
	0,  // 14: remote_output_service.RemoteOutputService.Clean:input_type -> remote_output_service.CleanRequest
	1,  // 15: remote_output_service.RemoteOutputService.StartBuild:input_type -> remote_output_service.StartBuildRequest
	4,  // 16: remote_output_service.RemoteOutputService.BatchCreate:input_type -> remote_output_service.BatchCreateRequest
	5,  // 17: remote_output_service.RemoteOutputService.BatchStat:input_type -> remote_output_service.BatchStatRequest
	9,  // 18: remote_output_service.RemoteOutputService.FinalizeBuild:input_type -> remote_output_service.FinalizeBuildRequest
	21, // 19: remote_output_service.RemoteOutputService.Clean:output_type -> google.protobuf.Empty
	3,  // 20: remote_output_service.RemoteOutputService.StartBuild:output_type -> remote_output_service.StartBuildResponse
	21, // 21: remote_output_service.RemoteOutputService.BatchCreate:output_type -> google.protobuf.Empty
	6,  // 22: remote_output_service.RemoteOutputService.BatchStat:output_type -> remote_output_service.BatchStatResponse
	21, // 23: remote_output_service.RemoteOutputService.FinalizeBuild:output_type -> google.protobuf.Empty
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pkg_proto_remoteoutputservice_remote_output_service_proto_init() }
func file_pkg_proto_remoteoutputservice_remote_output_service_proto_init() {
	if File_pkg_proto_remoteoutputservice_remote_output_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitialOutputPathContents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizeBuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileStatus_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileStatus_Symlink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileStatus_Directory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileStatus_External); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*FileStatus_File_)(nil),
		(*FileStatus_Symlink_)(nil),
		(*FileStatus_Directory_)(nil),
		(*FileStatus_External_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_remoteoutputservice_remote_output_service_proto_goTypes,
		DependencyIndexes: file_pkg_proto_remoteoutputservice_remote_output_service_proto_depIdxs,
		MessageInfos:      file_pkg_proto_remoteoutputservice_remote_output_service_proto_msgTypes,
	}.Build()
	File_pkg_proto_remoteoutputservice_remote_output_service_proto = out.File
	file_pkg_proto_remoteoutputservice_remote_output_service_proto_rawDesc = nil
	file_pkg_proto_remoteoutputservice_remote_output_service_proto_goTypes = nil
	file_pkg_proto_remoteoutputservice_remote_output_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RemoteOutputServiceClient is the client API for RemoteOutputService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteOutputServiceClient interface {
	Clean(ctx context.Context, in *CleanRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	StartBuild(ctx context.Context, in *StartBuildRequest, opts ...grpc.CallOption) (*StartBuildResponse, error)
	BatchCreate(ctx context.Context, in *BatchCreateRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	BatchStat(ctx context.Context, in *BatchStatRequest, opts ...grpc.CallOption) (*BatchStatResponse, error)
	FinalizeBuild(ctx context.Context, in *FinalizeBuildRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type remoteOutputServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRemoteOutputServiceClient(cc grpc.ClientConnInterface) RemoteOutputServiceClient {
	return &remoteOutputServiceClient{cc}
}

func (c *remoteOutputServiceClient) Clean(ctx context.Context, in *CleanRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/remote_output_service.RemoteOutputService/Clean", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteOutputServiceClient) StartBuild(ctx context.Context, in *StartBuildRequest, opts ...grpc.CallOption) (*StartBuildResponse, error) {
	out := new(StartBuildResponse)
	err := c.cc.Invoke(ctx, "/remote_output_service.RemoteOutputService/StartBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteOutputServiceClient) BatchCreate(ctx context.Context, in *BatchCreateRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/remote_output_service.RemoteOutputService/BatchCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteOutputServiceClient) BatchStat(ctx context.Context, in *BatchStatRequest, opts ...grpc.CallOption) (*BatchStatResponse, error) {
	out := new(BatchStatResponse)
	err := c.cc.Invoke(ctx, "/remote_output_service.RemoteOutputService/BatchStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteOutputServiceClient) FinalizeBuild(ctx context.Context, in *FinalizeBuildRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/remote_output_service.RemoteOutputService/FinalizeBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteOutputServiceServer is the server API for RemoteOutputService service.
type RemoteOutputServiceServer interface {
	Clean(context.Context, *CleanRequest) (*emptypb.Empty, error)
	StartBuild(context.Context, *StartBuildRequest) (*StartBuildResponse, error)
	BatchCreate(context.Context, *BatchCreateRequest) (*emptypb.Empty, error)
	BatchStat(context.Context, *BatchStatRequest) (*BatchStatResponse, error)
	FinalizeBuild(context.Context, *FinalizeBuildRequest) (*emptypb.Empty, error)
}

// UnimplementedRemoteOutputServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRemoteOutputServiceServer struct {
}

func (*UnimplementedRemoteOutputServiceServer) Clean(context.Context, *CleanRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Clean not implemented")
}
func (*UnimplementedRemoteOutputServiceServer) StartBuild(context.Context, *StartBuildRequest) (*StartBuildResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartBuild not implemented")
}
func (*UnimplementedRemoteOutputServiceServer) BatchCreate(context.Context, *BatchCreateRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchCreate not implemented")
}
func (*UnimplementedRemoteOutputServiceServer) BatchStat(context.Context, *BatchStatRequest) (*BatchStatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchStat not implemented")
}
func (*UnimplementedRemoteOutputServiceServer) FinalizeBuild(context.Context, *FinalizeBuildRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinalizeBuild not implemented")
}

func RegisterRemoteOutputServiceServer(s grpc.ServiceRegistrar, srv RemoteOutputServiceServer) {
	s.RegisterService(&_RemoteOutputService_serviceDesc, srv)
}

func _RemoteOutputService_Clean_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteOutputServiceServer).Clean(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remote_output_service.RemoteOutputService/Clean",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteOutputServiceServer).Clean(ctx, req.(*CleanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteOutputService_StartBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteOutputServiceServer).StartBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remote_output_service.RemoteOutputService/StartBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteOutputServiceServer).StartBuild(ctx, req.(*StartBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteOutputService_BatchCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteOutputServiceServer).BatchCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remote_output_service.RemoteOutputService/BatchCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteOutputServiceServer).BatchCreate(ctx, req.(*BatchCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteOutputService_BatchStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchStatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteOutputServiceServer).BatchStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remote_output_service.RemoteOutputService/BatchStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteOutputServiceServer).BatchStat(ctx, req.(*BatchStatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteOutputService_FinalizeBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinalizeBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteOutputServiceServer).FinalizeBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remote_output_service.RemoteOutputService/FinalizeBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteOutputServiceServer).FinalizeBuild(ctx, req.(*FinalizeBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RemoteOutputService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "remote_output_service.RemoteOutputService",
	HandlerType: (*RemoteOutputServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Clean",
			Handler:    _RemoteOutputService_Clean_Handler,
		},
		{
			MethodName: "StartBuild",
			Handler:    _RemoteOutputService_StartBuild_Handler,
		},
		{
			MethodName: "BatchCreate",
			Handler:    _RemoteOutputService_BatchCreate_Handler,
		},
		{
			MethodName: "BatchStat",
			Handler:    _RemoteOutputService_BatchStat_Handler,
		},
		{
			MethodName: "FinalizeBuild",
			Handler:    _RemoteOutputService_FinalizeBuild_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/proto/remoteoutputservice/remote_output_service.proto",
}
