// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: pkg/proto/configuration/bb_worker/bb_worker.proto

package bb_worker

import (
	v2 "github.com/bazelbuild/remote-apis/build/bazel/remote/execution/v2"
	cas "github.com/buildbarn/bb-remote-execution/pkg/proto/configuration/cas"
	filesystem "github.com/buildbarn/bb-remote-execution/pkg/proto/configuration/filesystem"
	virtual "github.com/buildbarn/bb-remote-execution/pkg/proto/configuration/filesystem/virtual"
	resourceusage "github.com/buildbarn/bb-remote-execution/pkg/proto/resourceusage"
	blobstore "github.com/buildbarn/bb-storage/pkg/proto/configuration/blobstore"
	eviction "github.com/buildbarn/bb-storage/pkg/proto/configuration/eviction"
	global "github.com/buildbarn/bb-storage/pkg/proto/configuration/global"
	grpc "github.com/buildbarn/bb-storage/pkg/proto/configuration/grpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApplicationConfiguration struct {
	state                          protoimpl.MessageState                    `protogen:"open.v1"`
	Blobstore                      *blobstore.BlobstoreConfiguration         `protobuf:"bytes,1,opt,name=blobstore,proto3" json:"blobstore,omitempty"`
	BrowserUrl                     string                                    `protobuf:"bytes,2,opt,name=browser_url,json=browserUrl,proto3" json:"browser_url,omitempty"`
	MaximumMessageSizeBytes        int64                                     `protobuf:"varint,6,opt,name=maximum_message_size_bytes,json=maximumMessageSizeBytes,proto3" json:"maximum_message_size_bytes,omitempty"`
	Scheduler                      *grpc.ClientConfiguration                 `protobuf:"bytes,8,opt,name=scheduler,proto3" json:"scheduler,omitempty"`
	Global                         *global.Configuration                     `protobuf:"bytes,19,opt,name=global,proto3" json:"global,omitempty"`
	BuildDirectories               []*BuildDirectoryConfiguration            `protobuf:"bytes,20,rep,name=build_directories,json=buildDirectories,proto3" json:"build_directories,omitempty"`
	FilePool                       *filesystem.FilePoolConfiguration         `protobuf:"bytes,22,opt,name=file_pool,json=filePool,proto3" json:"file_pool,omitempty"`
	CompletedActionLoggers         []*CompletedActionLoggingConfiguration    `protobuf:"bytes,23,rep,name=completed_action_loggers,json=completedActionLoggers,proto3" json:"completed_action_loggers,omitempty"`
	InputDownloadConcurrency       int64                                     `protobuf:"varint,28,opt,name=input_download_concurrency,json=inputDownloadConcurrency,proto3" json:"input_download_concurrency,omitempty"`
	OutputUploadConcurrency        int64                                     `protobuf:"varint,24,opt,name=output_upload_concurrency,json=outputUploadConcurrency,proto3" json:"output_upload_concurrency,omitempty"`
	DirectoryCache                 *cas.CachingDirectoryFetcherConfiguration `protobuf:"bytes,25,opt,name=directory_cache,json=directoryCache,proto3" json:"directory_cache,omitempty"`
	Prefetching                    *PrefetchingConfiguration                 `protobuf:"bytes,26,opt,name=prefetching,proto3" json:"prefetching,omitempty"`
	ForceUploadTreesAndDirectories bool                                      `protobuf:"varint,27,opt,name=force_upload_trees_and_directories,json=forceUploadTreesAndDirectories,proto3" json:"force_upload_trees_and_directories,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *ApplicationConfiguration) Reset() {
	*x = ApplicationConfiguration{}
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationConfiguration) ProtoMessage() {}

func (x *ApplicationConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationConfiguration.ProtoReflect.Descriptor instead.
func (*ApplicationConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescGZIP(), []int{0}
}

func (x *ApplicationConfiguration) GetBlobstore() *blobstore.BlobstoreConfiguration {
	if x != nil {
		return x.Blobstore
	}
	return nil
}

func (x *ApplicationConfiguration) GetBrowserUrl() string {
	if x != nil {
		return x.BrowserUrl
	}
	return ""
}

func (x *ApplicationConfiguration) GetMaximumMessageSizeBytes() int64 {
	if x != nil {
		return x.MaximumMessageSizeBytes
	}
	return 0
}

func (x *ApplicationConfiguration) GetScheduler() *grpc.ClientConfiguration {
	if x != nil {
		return x.Scheduler
	}
	return nil
}

func (x *ApplicationConfiguration) GetGlobal() *global.Configuration {
	if x != nil {
		return x.Global
	}
	return nil
}

func (x *ApplicationConfiguration) GetBuildDirectories() []*BuildDirectoryConfiguration {
	if x != nil {
		return x.BuildDirectories
	}
	return nil
}

func (x *ApplicationConfiguration) GetFilePool() *filesystem.FilePoolConfiguration {
	if x != nil {
		return x.FilePool
	}
	return nil
}

func (x *ApplicationConfiguration) GetCompletedActionLoggers() []*CompletedActionLoggingConfiguration {
	if x != nil {
		return x.CompletedActionLoggers
	}
	return nil
}

func (x *ApplicationConfiguration) GetInputDownloadConcurrency() int64 {
	if x != nil {
		return x.InputDownloadConcurrency
	}
	return 0
}

func (x *ApplicationConfiguration) GetOutputUploadConcurrency() int64 {
	if x != nil {
		return x.OutputUploadConcurrency
	}
	return 0
}

func (x *ApplicationConfiguration) GetDirectoryCache() *cas.CachingDirectoryFetcherConfiguration {
	if x != nil {
		return x.DirectoryCache
	}
	return nil
}

func (x *ApplicationConfiguration) GetPrefetching() *PrefetchingConfiguration {
	if x != nil {
		return x.Prefetching
	}
	return nil
}

func (x *ApplicationConfiguration) GetForceUploadTreesAndDirectories() bool {
	if x != nil {
		return x.ForceUploadTreesAndDirectories
	}
	return false
}

type BuildDirectoryConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Backend:
	//
	//	*BuildDirectoryConfiguration_Native
	//	*BuildDirectoryConfiguration_Virtual
	Backend       isBuildDirectoryConfiguration_Backend `protobuf_oneof:"backend"`
	Runners       []*RunnerConfiguration                `protobuf:"bytes,3,rep,name=runners,proto3" json:"runners,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildDirectoryConfiguration) Reset() {
	*x = BuildDirectoryConfiguration{}
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildDirectoryConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildDirectoryConfiguration) ProtoMessage() {}

func (x *BuildDirectoryConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildDirectoryConfiguration.ProtoReflect.Descriptor instead.
func (*BuildDirectoryConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescGZIP(), []int{1}
}

func (x *BuildDirectoryConfiguration) GetBackend() isBuildDirectoryConfiguration_Backend {
	if x != nil {
		return x.Backend
	}
	return nil
}

func (x *BuildDirectoryConfiguration) GetNative() *NativeBuildDirectoryConfiguration {
	if x != nil {
		if x, ok := x.Backend.(*BuildDirectoryConfiguration_Native); ok {
			return x.Native
		}
	}
	return nil
}

func (x *BuildDirectoryConfiguration) GetVirtual() *VirtualBuildDirectoryConfiguration {
	if x != nil {
		if x, ok := x.Backend.(*BuildDirectoryConfiguration_Virtual); ok {
			return x.Virtual
		}
	}
	return nil
}

func (x *BuildDirectoryConfiguration) GetRunners() []*RunnerConfiguration {
	if x != nil {
		return x.Runners
	}
	return nil
}

type isBuildDirectoryConfiguration_Backend interface {
	isBuildDirectoryConfiguration_Backend()
}

type BuildDirectoryConfiguration_Native struct {
	Native *NativeBuildDirectoryConfiguration `protobuf:"bytes,1,opt,name=native,proto3,oneof"`
}

type BuildDirectoryConfiguration_Virtual struct {
	Virtual *VirtualBuildDirectoryConfiguration `protobuf:"bytes,2,opt,name=virtual,proto3,oneof"`
}

func (*BuildDirectoryConfiguration_Native) isBuildDirectoryConfiguration_Backend() {}

func (*BuildDirectoryConfiguration_Virtual) isBuildDirectoryConfiguration_Backend() {}

type NativeBuildDirectoryConfiguration struct {
	state                  protoimpl.MessageState          `protogen:"open.v1"`
	BuildDirectoryPath     string                          `protobuf:"bytes,1,opt,name=build_directory_path,json=buildDirectoryPath,proto3" json:"build_directory_path,omitempty"`
	CacheDirectoryPath     string                          `protobuf:"bytes,2,opt,name=cache_directory_path,json=cacheDirectoryPath,proto3" json:"cache_directory_path,omitempty"`
	MaximumCacheFileCount  uint64                          `protobuf:"varint,3,opt,name=maximum_cache_file_count,json=maximumCacheFileCount,proto3" json:"maximum_cache_file_count,omitempty"`
	MaximumCacheSizeBytes  int64                           `protobuf:"varint,4,opt,name=maximum_cache_size_bytes,json=maximumCacheSizeBytes,proto3" json:"maximum_cache_size_bytes,omitempty"`
	CacheReplacementPolicy eviction.CacheReplacementPolicy `protobuf:"varint,5,opt,name=cache_replacement_policy,json=cacheReplacementPolicy,proto3,enum=buildbarn.configuration.eviction.CacheReplacementPolicy" json:"cache_replacement_policy,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NativeBuildDirectoryConfiguration) Reset() {
	*x = NativeBuildDirectoryConfiguration{}
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NativeBuildDirectoryConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeBuildDirectoryConfiguration) ProtoMessage() {}

func (x *NativeBuildDirectoryConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeBuildDirectoryConfiguration.ProtoReflect.Descriptor instead.
func (*NativeBuildDirectoryConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescGZIP(), []int{2}
}

func (x *NativeBuildDirectoryConfiguration) GetBuildDirectoryPath() string {
	if x != nil {
		return x.BuildDirectoryPath
	}
	return ""
}

func (x *NativeBuildDirectoryConfiguration) GetCacheDirectoryPath() string {
	if x != nil {
		return x.CacheDirectoryPath
	}
	return ""
}

func (x *NativeBuildDirectoryConfiguration) GetMaximumCacheFileCount() uint64 {
	if x != nil {
		return x.MaximumCacheFileCount
	}
	return 0
}

func (x *NativeBuildDirectoryConfiguration) GetMaximumCacheSizeBytes() int64 {
	if x != nil {
		return x.MaximumCacheSizeBytes
	}
	return 0
}

func (x *NativeBuildDirectoryConfiguration) GetCacheReplacementPolicy() eviction.CacheReplacementPolicy {
	if x != nil {
		return x.CacheReplacementPolicy
	}
	return eviction.CacheReplacementPolicy(0)
}

type VirtualBuildDirectoryConfiguration struct {
	state                               protoimpl.MessageState      `protogen:"open.v1"`
	Mount                               *virtual.MountConfiguration `protobuf:"bytes,1,opt,name=mount,proto3" json:"mount,omitempty"`
	MaximumExecutionTimeoutCompensation *durationpb.Duration        `protobuf:"bytes,2,opt,name=maximum_execution_timeout_compensation,json=maximumExecutionTimeoutCompensation,proto3" json:"maximum_execution_timeout_compensation,omitempty"`
	ShuffleDirectoryListings            bool                        `protobuf:"varint,3,opt,name=shuffle_directory_listings,json=shuffleDirectoryListings,proto3" json:"shuffle_directory_listings,omitempty"`
	HiddenFilesPattern                  string                      `protobuf:"bytes,4,opt,name=hidden_files_pattern,json=hiddenFilesPattern,proto3" json:"hidden_files_pattern,omitempty"`
	MaximumWritableFileUploadDelay      *durationpb.Duration        `protobuf:"bytes,5,opt,name=maximum_writable_file_upload_delay,json=maximumWritableFileUploadDelay,proto3" json:"maximum_writable_file_upload_delay,omitempty"`
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *VirtualBuildDirectoryConfiguration) Reset() {
	*x = VirtualBuildDirectoryConfiguration{}
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualBuildDirectoryConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualBuildDirectoryConfiguration) ProtoMessage() {}

func (x *VirtualBuildDirectoryConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualBuildDirectoryConfiguration.ProtoReflect.Descriptor instead.
func (*VirtualBuildDirectoryConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescGZIP(), []int{3}
}

func (x *VirtualBuildDirectoryConfiguration) GetMount() *virtual.MountConfiguration {
	if x != nil {
		return x.Mount
	}
	return nil
}

func (x *VirtualBuildDirectoryConfiguration) GetMaximumExecutionTimeoutCompensation() *durationpb.Duration {
	if x != nil {
		return x.MaximumExecutionTimeoutCompensation
	}
	return nil
}

func (x *VirtualBuildDirectoryConfiguration) GetShuffleDirectoryListings() bool {
	if x != nil {
		return x.ShuffleDirectoryListings
	}
	return false
}

func (x *VirtualBuildDirectoryConfiguration) GetHiddenFilesPattern() string {
	if x != nil {
		return x.HiddenFilesPattern
	}
	return ""
}

func (x *VirtualBuildDirectoryConfiguration) GetMaximumWritableFileUploadDelay() *durationpb.Duration {
	if x != nil {
		return x.MaximumWritableFileUploadDelay
	}
	return nil
}

type RunnerConfiguration struct {
	state                                        protoimpl.MessageState                                  `protogen:"open.v1"`
	Endpoint                                     *grpc.ClientConfiguration                               `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Concurrency                                  uint64                                                  `protobuf:"varint,2,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	InstanceNamePrefix                           string                                                  `protobuf:"bytes,13,opt,name=instance_name_prefix,json=instanceNamePrefix,proto3" json:"instance_name_prefix,omitempty"`
	Platform                                     *v2.Platform                                            `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	SizeClass                                    uint32                                                  `protobuf:"varint,12,opt,name=size_class,json=sizeClass,proto3" json:"size_class,omitempty"`
	MaximumFilePoolFileCount                     int64                                                   `protobuf:"varint,6,opt,name=maximum_file_pool_file_count,json=maximumFilePoolFileCount,proto3" json:"maximum_file_pool_file_count,omitempty"`
	MaximumFilePoolSizeBytes                     int64                                                   `protobuf:"varint,7,opt,name=maximum_file_pool_size_bytes,json=maximumFilePoolSizeBytes,proto3" json:"maximum_file_pool_size_bytes,omitempty"`
	WorkerId                                     map[string]string                                       `protobuf:"bytes,8,rep,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	InputRootCharacterDeviceNodes                []string                                                `protobuf:"bytes,9,rep,name=input_root_character_device_nodes,json=inputRootCharacterDeviceNodes,proto3" json:"input_root_character_device_nodes,omitempty"`
	CostsPerSecond                               map[string]*resourceusage.MonetaryResourceUsage_Expense `protobuf:"bytes,10,rep,name=costs_per_second,json=costsPerSecond,proto3" json:"costs_per_second,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	EnvironmentVariables                         map[string]string                                       `protobuf:"bytes,11,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MaximumConsecutiveTestInfrastructureFailures uint32                                                  `protobuf:"varint,14,opt,name=maximum_consecutive_test_infrastructure_failures,json=maximumConsecutiveTestInfrastructureFailures,proto3" json:"maximum_consecutive_test_infrastructure_failures,omitempty"`
	unknownFields                                protoimpl.UnknownFields
	sizeCache                                    protoimpl.SizeCache
}

func (x *RunnerConfiguration) Reset() {
	*x = RunnerConfiguration{}
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerConfiguration) ProtoMessage() {}

func (x *RunnerConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerConfiguration.ProtoReflect.Descriptor instead.
func (*RunnerConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescGZIP(), []int{4}
}

func (x *RunnerConfiguration) GetEndpoint() *grpc.ClientConfiguration {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *RunnerConfiguration) GetConcurrency() uint64 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

func (x *RunnerConfiguration) GetInstanceNamePrefix() string {
	if x != nil {
		return x.InstanceNamePrefix
	}
	return ""
}

func (x *RunnerConfiguration) GetPlatform() *v2.Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

func (x *RunnerConfiguration) GetSizeClass() uint32 {
	if x != nil {
		return x.SizeClass
	}
	return 0
}

func (x *RunnerConfiguration) GetMaximumFilePoolFileCount() int64 {
	if x != nil {
		return x.MaximumFilePoolFileCount
	}
	return 0
}

func (x *RunnerConfiguration) GetMaximumFilePoolSizeBytes() int64 {
	if x != nil {
		return x.MaximumFilePoolSizeBytes
	}
	return 0
}

func (x *RunnerConfiguration) GetWorkerId() map[string]string {
	if x != nil {
		return x.WorkerId
	}
	return nil
}

func (x *RunnerConfiguration) GetInputRootCharacterDeviceNodes() []string {
	if x != nil {
		return x.InputRootCharacterDeviceNodes
	}
	return nil
}

func (x *RunnerConfiguration) GetCostsPerSecond() map[string]*resourceusage.MonetaryResourceUsage_Expense {
	if x != nil {
		return x.CostsPerSecond
	}
	return nil
}

func (x *RunnerConfiguration) GetEnvironmentVariables() map[string]string {
	if x != nil {
		return x.EnvironmentVariables
	}
	return nil
}

func (x *RunnerConfiguration) GetMaximumConsecutiveTestInfrastructureFailures() uint32 {
	if x != nil {
		return x.MaximumConsecutiveTestInfrastructureFailures
	}
	return 0
}

type CompletedActionLoggingConfiguration struct {
	state                 protoimpl.MessageState    `protogen:"open.v1"`
	Client                *grpc.ClientConfiguration `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	MaximumSendQueueSize  uint32                    `protobuf:"varint,2,opt,name=maximum_send_queue_size,json=maximumSendQueueSize,proto3" json:"maximum_send_queue_size,omitempty"`
	AddInstanceNamePrefix string                    `protobuf:"bytes,3,opt,name=add_instance_name_prefix,json=addInstanceNamePrefix,proto3" json:"add_instance_name_prefix,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CompletedActionLoggingConfiguration) Reset() {
	*x = CompletedActionLoggingConfiguration{}
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompletedActionLoggingConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedActionLoggingConfiguration) ProtoMessage() {}

func (x *CompletedActionLoggingConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedActionLoggingConfiguration.ProtoReflect.Descriptor instead.
func (*CompletedActionLoggingConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescGZIP(), []int{5}
}

func (x *CompletedActionLoggingConfiguration) GetClient() *grpc.ClientConfiguration {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *CompletedActionLoggingConfiguration) GetMaximumSendQueueSize() uint32 {
	if x != nil {
		return x.MaximumSendQueueSize
	}
	return 0
}

func (x *CompletedActionLoggingConfiguration) GetAddInstanceNamePrefix() string {
	if x != nil {
		return x.AddInstanceNamePrefix
	}
	return ""
}

type PrefetchingConfiguration struct {
	state                       protoimpl.MessageState             `protogen:"open.v1"`
	FileSystemAccessCache       *blobstore.BlobAccessConfiguration `protobuf:"bytes,1,opt,name=file_system_access_cache,json=fileSystemAccessCache,proto3" json:"file_system_access_cache,omitempty"`
	BloomFilterBitsPerPath      uint32                             `protobuf:"varint,2,opt,name=bloom_filter_bits_per_path,json=bloomFilterBitsPerPath,proto3" json:"bloom_filter_bits_per_path,omitempty"`
	BloomFilterMaximumSizeBytes uint32                             `protobuf:"varint,3,opt,name=bloom_filter_maximum_size_bytes,json=bloomFilterMaximumSizeBytes,proto3" json:"bloom_filter_maximum_size_bytes,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *PrefetchingConfiguration) Reset() {
	*x = PrefetchingConfiguration{}
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrefetchingConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefetchingConfiguration) ProtoMessage() {}

func (x *PrefetchingConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefetchingConfiguration.ProtoReflect.Descriptor instead.
func (*PrefetchingConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescGZIP(), []int{6}
}

func (x *PrefetchingConfiguration) GetFileSystemAccessCache() *blobstore.BlobAccessConfiguration {
	if x != nil {
		return x.FileSystemAccessCache
	}
	return nil
}

func (x *PrefetchingConfiguration) GetBloomFilterBitsPerPath() uint32 {
	if x != nil {
		return x.BloomFilterBitsPerPath
	}
	return 0
}

func (x *PrefetchingConfiguration) GetBloomFilterMaximumSizeBytes() uint32 {
	if x != nil {
		return x.BloomFilterMaximumSizeBytes
	}
	return 0
}

var File_pkg_proto_configuration_bb_worker_bb_worker_proto protoreflect.FileDescriptor

const file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDesc = "" +
	"\n" +
	"1pkg/proto/configuration/bb_worker/bb_worker.proto\x12!buildbarn.configuration.bb_worker\x1a6build/bazel/remote/execution/v2/remote_execution.proto\x1a\x1egoogle/protobuf/duration.proto\x1a1pkg/proto/configuration/blobstore/blobstore.proto\x1a%pkg/proto/configuration/cas/cas.proto\x1a/pkg/proto/configuration/eviction/eviction.proto\x1a3pkg/proto/configuration/filesystem/filesystem.proto\x1a8pkg/proto/configuration/filesystem/virtual/virtual.proto\x1a+pkg/proto/configuration/global/global.proto\x1a'pkg/proto/configuration/grpc/grpc.proto\x1a+pkg/proto/resourceusage/resourceusage.proto\"\xe0\b\n" +
	"\x18ApplicationConfiguration\x12W\n" +
	"\tblobstore\x18\x01 \x01(\v29.buildbarn.configuration.blobstore.BlobstoreConfigurationR\tblobstore\x12\x1f\n" +
	"\vbrowser_url\x18\x02 \x01(\tR\n" +
	"browserUrl\x12;\n" +
	"\x1amaximum_message_size_bytes\x18\x06 \x01(\x03R\x17maximumMessageSizeBytes\x12O\n" +
	"\tscheduler\x18\b \x01(\v21.buildbarn.configuration.grpc.ClientConfigurationR\tscheduler\x12E\n" +
	"\x06global\x18\x13 \x01(\v2-.buildbarn.configuration.global.ConfigurationR\x06global\x12k\n" +
	"\x11build_directories\x18\x14 \x03(\v2>.buildbarn.configuration.bb_worker.BuildDirectoryConfigurationR\x10buildDirectories\x12V\n" +
	"\tfile_pool\x18\x16 \x01(\v29.buildbarn.configuration.filesystem.FilePoolConfigurationR\bfilePool\x12\x80\x01\n" +
	"\x18completed_action_loggers\x18\x17 \x03(\v2F.buildbarn.configuration.bb_worker.CompletedActionLoggingConfigurationR\x16completedActionLoggers\x12<\n" +
	"\x1ainput_download_concurrency\x18\x1c \x01(\x03R\x18inputDownloadConcurrency\x12:\n" +
	"\x19output_upload_concurrency\x18\x18 \x01(\x03R\x17outputUploadConcurrency\x12j\n" +
	"\x0fdirectory_cache\x18\x19 \x01(\v2A.buildbarn.configuration.cas.CachingDirectoryFetcherConfigurationR\x0edirectoryCache\x12]\n" +
	"\vprefetching\x18\x1a \x01(\v2;.buildbarn.configuration.bb_worker.PrefetchingConfigurationR\vprefetching\x12J\n" +
	"\"force_upload_trees_and_directories\x18\x1b \x01(\bR\x1eforceUploadTreesAndDirectoriesJ\x04\b\t\x10\n" +
	"J\x04\b\f\x10\rJ\x04\b\x10\x10\x11J\x04\b\x12\x10\x13J\x04\b\x15\x10\x16\"\xbd\x02\n" +
	"\x1bBuildDirectoryConfiguration\x12^\n" +
	"\x06native\x18\x01 \x01(\v2D.buildbarn.configuration.bb_worker.NativeBuildDirectoryConfigurationH\x00R\x06native\x12a\n" +
	"\avirtual\x18\x02 \x01(\v2E.buildbarn.configuration.bb_worker.VirtualBuildDirectoryConfigurationH\x00R\avirtual\x12P\n" +
	"\arunners\x18\x03 \x03(\v26.buildbarn.configuration.bb_worker.RunnerConfigurationR\arunnersB\t\n" +
	"\abackend\"\xed\x02\n" +
	"!NativeBuildDirectoryConfiguration\x120\n" +
	"\x14build_directory_path\x18\x01 \x01(\tR\x12buildDirectoryPath\x120\n" +
	"\x14cache_directory_path\x18\x02 \x01(\tR\x12cacheDirectoryPath\x127\n" +
	"\x18maximum_cache_file_count\x18\x03 \x01(\x04R\x15maximumCacheFileCount\x127\n" +
	"\x18maximum_cache_size_bytes\x18\x04 \x01(\x03R\x15maximumCacheSizeBytes\x12r\n" +
	"\x18cache_replacement_policy\x18\x05 \x01(\x0e28.buildbarn.configuration.eviction.CacheReplacementPolicyR\x16cacheReplacementPolicy\"\xc1\x03\n" +
	"\"VirtualBuildDirectoryConfiguration\x12T\n" +
	"\x05mount\x18\x01 \x01(\v2>.buildbarn.configuration.filesystem.virtual.MountConfigurationR\x05mount\x12n\n" +
	"&maximum_execution_timeout_compensation\x18\x02 \x01(\v2\x19.google.protobuf.DurationR#maximumExecutionTimeoutCompensation\x12<\n" +
	"\x1ashuffle_directory_listings\x18\x03 \x01(\bR\x18shuffleDirectoryListings\x120\n" +
	"\x14hidden_files_pattern\x18\x04 \x01(\tR\x12hiddenFilesPattern\x12e\n" +
	"\"maximum_writable_file_upload_delay\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\x1emaximumWritableFileUploadDelay\"\xbe\t\n" +
	"\x13RunnerConfiguration\x12M\n" +
	"\bendpoint\x18\x01 \x01(\v21.buildbarn.configuration.grpc.ClientConfigurationR\bendpoint\x12 \n" +
	"\vconcurrency\x18\x02 \x01(\x04R\vconcurrency\x120\n" +
	"\x14instance_name_prefix\x18\r \x01(\tR\x12instanceNamePrefix\x12E\n" +
	"\bplatform\x18\x03 \x01(\v2).build.bazel.remote.execution.v2.PlatformR\bplatform\x12\x1d\n" +
	"\n" +
	"size_class\x18\f \x01(\rR\tsizeClass\x12>\n" +
	"\x1cmaximum_file_pool_file_count\x18\x06 \x01(\x03R\x18maximumFilePoolFileCount\x12>\n" +
	"\x1cmaximum_file_pool_size_bytes\x18\a \x01(\x03R\x18maximumFilePoolSizeBytes\x12a\n" +
	"\tworker_id\x18\b \x03(\v2D.buildbarn.configuration.bb_worker.RunnerConfiguration.WorkerIdEntryR\bworkerId\x12H\n" +
	"!input_root_character_device_nodes\x18\t \x03(\tR\x1dinputRootCharacterDeviceNodes\x12t\n" +
	"\x10costs_per_second\x18\n" +
	" \x03(\v2J.buildbarn.configuration.bb_worker.RunnerConfiguration.CostsPerSecondEntryR\x0ecostsPerSecond\x12\x85\x01\n" +
	"\x15environment_variables\x18\v \x03(\v2P.buildbarn.configuration.bb_worker.RunnerConfiguration.EnvironmentVariablesEntryR\x14environmentVariables\x12f\n" +
	"0maximum_consecutive_test_infrastructure_failures\x18\x0e \x01(\rR,maximumConsecutiveTestInfrastructureFailures\x1a;\n" +
	"\rWorkerIdEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1ay\n" +
	"\x13CostsPerSecondEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12L\n" +
	"\x05value\x18\x02 \x01(\v26.buildbarn.resourceusage.MonetaryResourceUsage.ExpenseR\x05value:\x028\x01\x1aG\n" +
	"\x19EnvironmentVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\x04\x10\x05J\x04\b\x05\x10\x06\"\xe0\x01\n" +
	"#CompletedActionLoggingConfiguration\x12I\n" +
	"\x06client\x18\x01 \x01(\v21.buildbarn.configuration.grpc.ClientConfigurationR\x06client\x125\n" +
	"\x17maximum_send_queue_size\x18\x02 \x01(\rR\x14maximumSendQueueSize\x127\n" +
	"\x18add_instance_name_prefix\x18\x03 \x01(\tR\x15addInstanceNamePrefix\"\x97\x02\n" +
	"\x18PrefetchingConfiguration\x12s\n" +
	"\x18file_system_access_cache\x18\x01 \x01(\v2:.buildbarn.configuration.blobstore.BlobAccessConfigurationR\x15fileSystemAccessCache\x12:\n" +
	"\x1abloom_filter_bits_per_path\x18\x02 \x01(\rR\x16bloomFilterBitsPerPath\x12D\n" +
	"\x1fbloom_filter_maximum_size_bytes\x18\x03 \x01(\rR\x1bbloomFilterMaximumSizeBytesJ\x04\b\x04\x10\x05BLZJgithub.com/buildbarn/bb-remote-execution/pkg/proto/configuration/bb_workerb\x06proto3"

var (
	file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescOnce sync.Once
	file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescData []byte
)

func file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescGZIP() []byte {
	file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescOnce.Do(func() {
		file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDesc), len(file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDesc)))
	})
	return file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDescData
}

var file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pkg_proto_configuration_bb_worker_bb_worker_proto_goTypes = []any{
	(*ApplicationConfiguration)(nil),                    // 0: buildbarn.configuration.bb_worker.ApplicationConfiguration
	(*BuildDirectoryConfiguration)(nil),                 // 1: buildbarn.configuration.bb_worker.BuildDirectoryConfiguration
	(*NativeBuildDirectoryConfiguration)(nil),           // 2: buildbarn.configuration.bb_worker.NativeBuildDirectoryConfiguration
	(*VirtualBuildDirectoryConfiguration)(nil),          // 3: buildbarn.configuration.bb_worker.VirtualBuildDirectoryConfiguration
	(*RunnerConfiguration)(nil),                         // 4: buildbarn.configuration.bb_worker.RunnerConfiguration
	(*CompletedActionLoggingConfiguration)(nil),         // 5: buildbarn.configuration.bb_worker.CompletedActionLoggingConfiguration
	(*PrefetchingConfiguration)(nil),                    // 6: buildbarn.configuration.bb_worker.PrefetchingConfiguration
	nil,                                                 // 7: buildbarn.configuration.bb_worker.RunnerConfiguration.WorkerIdEntry
	nil,                                                 // 8: buildbarn.configuration.bb_worker.RunnerConfiguration.CostsPerSecondEntry
	nil,                                                 // 9: buildbarn.configuration.bb_worker.RunnerConfiguration.EnvironmentVariablesEntry
	(*blobstore.BlobstoreConfiguration)(nil),            // 10: buildbarn.configuration.blobstore.BlobstoreConfiguration
	(*grpc.ClientConfiguration)(nil),                    // 11: buildbarn.configuration.grpc.ClientConfiguration
	(*global.Configuration)(nil),                        // 12: buildbarn.configuration.global.Configuration
	(*filesystem.FilePoolConfiguration)(nil),            // 13: buildbarn.configuration.filesystem.FilePoolConfiguration
	(*cas.CachingDirectoryFetcherConfiguration)(nil),    // 14: buildbarn.configuration.cas.CachingDirectoryFetcherConfiguration
	(eviction.CacheReplacementPolicy)(0),                // 15: buildbarn.configuration.eviction.CacheReplacementPolicy
	(*virtual.MountConfiguration)(nil),                  // 16: buildbarn.configuration.filesystem.virtual.MountConfiguration
	(*durationpb.Duration)(nil),                         // 17: google.protobuf.Duration
	(*v2.Platform)(nil),                                 // 18: build.bazel.remote.execution.v2.Platform
	(*blobstore.BlobAccessConfiguration)(nil),           // 19: buildbarn.configuration.blobstore.BlobAccessConfiguration
	(*resourceusage.MonetaryResourceUsage_Expense)(nil), // 20: buildbarn.resourceusage.MonetaryResourceUsage.Expense
}
var file_pkg_proto_configuration_bb_worker_bb_worker_proto_depIdxs = []int32{
	10, // 0: buildbarn.configuration.bb_worker.ApplicationConfiguration.blobstore:type_name -> buildbarn.configuration.blobstore.BlobstoreConfiguration
	11, // 1: buildbarn.configuration.bb_worker.ApplicationConfiguration.scheduler:type_name -> buildbarn.configuration.grpc.ClientConfiguration
	12, // 2: buildbarn.configuration.bb_worker.ApplicationConfiguration.global:type_name -> buildbarn.configuration.global.Configuration
	1,  // 3: buildbarn.configuration.bb_worker.ApplicationConfiguration.build_directories:type_name -> buildbarn.configuration.bb_worker.BuildDirectoryConfiguration
	13, // 4: buildbarn.configuration.bb_worker.ApplicationConfiguration.file_pool:type_name -> buildbarn.configuration.filesystem.FilePoolConfiguration
	5,  // 5: buildbarn.configuration.bb_worker.ApplicationConfiguration.completed_action_loggers:type_name -> buildbarn.configuration.bb_worker.CompletedActionLoggingConfiguration
	14, // 6: buildbarn.configuration.bb_worker.ApplicationConfiguration.directory_cache:type_name -> buildbarn.configuration.cas.CachingDirectoryFetcherConfiguration
	6,  // 7: buildbarn.configuration.bb_worker.ApplicationConfiguration.prefetching:type_name -> buildbarn.configuration.bb_worker.PrefetchingConfiguration
	2,  // 8: buildbarn.configuration.bb_worker.BuildDirectoryConfiguration.native:type_name -> buildbarn.configuration.bb_worker.NativeBuildDirectoryConfiguration
	3,  // 9: buildbarn.configuration.bb_worker.BuildDirectoryConfiguration.virtual:type_name -> buildbarn.configuration.bb_worker.VirtualBuildDirectoryConfiguration
	4,  // 10: buildbarn.configuration.bb_worker.BuildDirectoryConfiguration.runners:type_name -> buildbarn.configuration.bb_worker.RunnerConfiguration
	15, // 11: buildbarn.configuration.bb_worker.NativeBuildDirectoryConfiguration.cache_replacement_policy:type_name -> buildbarn.configuration.eviction.CacheReplacementPolicy
	16, // 12: buildbarn.configuration.bb_worker.VirtualBuildDirectoryConfiguration.mount:type_name -> buildbarn.configuration.filesystem.virtual.MountConfiguration
	17, // 13: buildbarn.configuration.bb_worker.VirtualBuildDirectoryConfiguration.maximum_execution_timeout_compensation:type_name -> google.protobuf.Duration
	17, // 14: buildbarn.configuration.bb_worker.VirtualBuildDirectoryConfiguration.maximum_writable_file_upload_delay:type_name -> google.protobuf.Duration
	11, // 15: buildbarn.configuration.bb_worker.RunnerConfiguration.endpoint:type_name -> buildbarn.configuration.grpc.ClientConfiguration
	18, // 16: buildbarn.configuration.bb_worker.RunnerConfiguration.platform:type_name -> build.bazel.remote.execution.v2.Platform
	7,  // 17: buildbarn.configuration.bb_worker.RunnerConfiguration.worker_id:type_name -> buildbarn.configuration.bb_worker.RunnerConfiguration.WorkerIdEntry
	8,  // 18: buildbarn.configuration.bb_worker.RunnerConfiguration.costs_per_second:type_name -> buildbarn.configuration.bb_worker.RunnerConfiguration.CostsPerSecondEntry
	9,  // 19: buildbarn.configuration.bb_worker.RunnerConfiguration.environment_variables:type_name -> buildbarn.configuration.bb_worker.RunnerConfiguration.EnvironmentVariablesEntry
	11, // 20: buildbarn.configuration.bb_worker.CompletedActionLoggingConfiguration.client:type_name -> buildbarn.configuration.grpc.ClientConfiguration
	19, // 21: buildbarn.configuration.bb_worker.PrefetchingConfiguration.file_system_access_cache:type_name -> buildbarn.configuration.blobstore.BlobAccessConfiguration
	20, // 22: buildbarn.configuration.bb_worker.RunnerConfiguration.CostsPerSecondEntry.value:type_name -> buildbarn.resourceusage.MonetaryResourceUsage.Expense
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_pkg_proto_configuration_bb_worker_bb_worker_proto_init() }
func file_pkg_proto_configuration_bb_worker_bb_worker_proto_init() {
	if File_pkg_proto_configuration_bb_worker_bb_worker_proto != nil {
		return
	}
	file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes[1].OneofWrappers = []any{
		(*BuildDirectoryConfiguration_Native)(nil),
		(*BuildDirectoryConfiguration_Virtual)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDesc), len(file_pkg_proto_configuration_bb_worker_bb_worker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_proto_configuration_bb_worker_bb_worker_proto_goTypes,
		DependencyIndexes: file_pkg_proto_configuration_bb_worker_bb_worker_proto_depIdxs,
		MessageInfos:      file_pkg_proto_configuration_bb_worker_bb_worker_proto_msgTypes,
	}.Build()
	File_pkg_proto_configuration_bb_worker_bb_worker_proto = out.File
	file_pkg_proto_configuration_bb_worker_bb_worker_proto_goTypes = nil
	file_pkg_proto_configuration_bb_worker_bb_worker_proto_depIdxs = nil
}
