syntax = "proto3";

package buildbarn.configuration.bb_scheduler;

import "pkg/proto/configuration/blobstore/blobstore.proto";
import "pkg/proto/configuration/cloud/aws/aws.proto";
import "pkg/proto/configuration/global/global.proto";
import "pkg/proto/configuration/grpc/grpc.proto";

option go_package = "github.com/buildbarn/bb-remote-execution/pkg/proto/configuration/bb_scheduler";

message ApplicationConfiguration {
  // Address on which to listen to expose the web UI.
  string admin_http_listen_address = 2;

  // gRPC servers to spawn to listen for requests from clients
  // (bb_storage or Bazel).
  repeated buildbarn.configuration.grpc.ServerConfiguration
      client_grpc_servers = 3;

  // gRPC servers to spawn to listen for requests from bb_worker.
  repeated buildbarn.configuration.grpc.ServerConfiguration
      worker_grpc_servers = 4;

  // URL of the Buildbarn Browser, linked to by the web UI.
  string browser_url = 5;

  // Configuration for blob storage.
  buildbarn.configuration.blobstore.BlobAccessConfiguration
      content_addressable_storage = 6;

  // Maximum Protobuf message size to unmarshal.
  int64 maximum_message_size_bytes = 7;

  // Common configuration options that apply to all Buildbarn binaries.
  buildbarn.configuration.global.Configuration global = 8;

  // AWS Auto Scaling Group lifecycle hooks that should be used to
  // automatically drain EC2 instances that are about to be terminated,
  // and to delay their termination until all operations running on
  // those systems have completed.
  //
  // More details:
  // https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html
  repeated AWSASGLifecycleHookConfiguration aws_asg_lifecycle_hooks = 9;

  // AWS access options and credentials.
  buildbarn.configuration.cloud.aws.SessionConfiguration aws_session = 10;

  // Keywords to display in web view
  repeated string keywords = 11;
}

message AWSASGLifecycleHookConfiguration {
  // The URL of the Simple Queue Service (SQS) queue where
  // "autoscaling:EC2_INSTANCE_TERMINATING" events are posted.
  string sqs_url = 1;

  // Label that should be used to match the instance ID of the EC2
  // instance (i-*) against workers known by the scheduler. For example,
  // if your workers are all called {"instance": "i-*", "thread": "*"},
  // then this configuration option should be set to "instance".
  //
  // On systems like Amazon EKS, it is possible to attach an instance ID
  // label to workers by creating an initContainer that stores the
  // contents of http://169.254.169.254/latest/meta-data/instance-id in
  // a file in an emptyDir. This file can then be loaded by bb_worker on
  // startup using Jsonnet's importstr command.
  //
  // Setting this configuration option incorrectly may cause the
  // scheduler to not drain the right set of workers.
  string instance_id_label = 2;
}
