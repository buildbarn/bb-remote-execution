load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "routing",
    srcs = [
        "action_router.go",
        "configuration.go",
        "demultiplexing_action_router.go",
        "simple_action_router.go",
    ],
    importpath = "github.com/buildbarn/bb-remote-execution/pkg/scheduler/routing",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/proto/configuration/scheduler",
        "//pkg/scheduler/initialsizeclass",
        "//pkg/scheduler/invocation",
        "//pkg/scheduler/platform",
        "@com_github_bazelbuild_remote_apis//build/bazel/remote/execution/v2:execution",
        "@com_github_buildbarn_bb_storage//pkg/blobstore",
        "@com_github_buildbarn_bb_storage//pkg/digest",
        "@com_github_buildbarn_bb_storage//pkg/util",
        "@com_github_prometheus_client_golang//prometheus",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)

go_test(
    name = "routing_test",
    srcs = ["demultiplexing_action_router_test.go"],
    deps = [
        ":routing",
        "//internal/mock",
        "//pkg/scheduler/platform",
        "@com_github_bazelbuild_remote_apis//build/bazel/remote/execution/v2:execution",
        "@com_github_buildbarn_bb_storage//pkg/digest",
        "@com_github_buildbarn_bb_storage//pkg/testutil",
        "@com_github_golang_mock//gomock",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)
